policy_module(sanlock,1.0.0)

########################################
#
# Declarations
#

type sanlock_t;
type sanlock_exec_t;
init_daemon_domain(sanlock_t, sanlock_exec_t)

permissive sanlock_t;

type sanlock_var_run_t;
files_pid_file(sanlock_var_run_t)

type sanlock_initrc_exec_t;
init_script_file(sanlock_initrc_exec_t)

########################################
#
# sanlock local policy
#
allow sanlock_t self:capability { sys_nice ipc_lock };
allow sanlock_t self:process { setsched signull };

allow sanlock_t self:fifo_file rw_fifo_file_perms;
allow sanlock_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(sanlock_t, sanlock_var_run_t, sanlock_var_run_t)
manage_files_pattern(sanlock_t, sanlock_var_run_t, sanlock_var_run_t)
manage_sock_files_pattern(sanlock_t, sanlock_var_run_t, sanlock_var_run_t)

domain_use_interactive_fds(sanlock_t)

files_read_etc_files(sanlock_t)

logging_send_syslog_msg(sanlock_t)

init_read_utmp(sanlock_t)
init_dontaudit_write_utmp(sanlock_t)

miscfiles_read_localization(sanlock_t)

wdmd_stream_connect(sanlock_t)
require {
	type sanlock_t;
}

#============= sanlock_t ==============
storage_raw_rw_fixed_disk(sanlock_t)

gen_require(`
	attribute virt_domain;
')

# virt_kill_svirt(sanlock_t)
# virt_signal_svirt(sanlock_t)
allow sanlock_t virt_domain:process { signal sigkill };
