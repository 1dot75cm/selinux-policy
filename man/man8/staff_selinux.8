.TH  "staff_selinux"  "8"  "staff" "mgrepl@redhat.com" "staff SELinux Policy documentation"
.SH "NAME"
staff_u \- \fBAdministrator's unprivileged user\fP - Security Enhanced Linux Policy

.SH DESCRIPTION

\fBstaff_u\fP is an SELinux User defined in the SELinux
policy. SELinux users have default roles, \fBstaff_r\fP.  The
default role has a default type, \fBstaff_t\fP, associated with it.

The SELinux user will usually login to a system with a context that looks like:

.B staff_u:staff_r:staff_t:s0 - s0:c0.c1023

Linux users are automatically assigned an SELinux users at login.
Login programs use the SELinux User to assign initial context to the user's shell.

SELinux policy uses the context to control the user's access.

By default all users are assigned to the SELinux user via the \fB__default__\fP flag

On Targeted policy systems the \fB__default__\fP user is assigned to the \fBunconfined_u\fP SELinux user.

You can list all Linux User to SELinux user mapping using:

.B semanage login -l

If you wanted to change the default user mapping to use the staff_u user, you would execute:

.B semanage login -m -s staff_u __default__


If you want to map the one Linux user (joe) to the SELinux user staff, you would execute:

.B $ semanage login -a -s staff_u joe


.SH USER DESCRIPTION

The SELinux user staff_u is defined in policy as a unprivileged user. SELinux prevents unprivileged users from doing administration tasks without transitioning to a different role.

.SH SUDO

The SELinux user staff can execute sudo.

You can set up sudo to allow staff to transition to an administrative domain:

Add one or more of the following record to sudoers using visudo.


USERNAME ALL=(ALL) ROLE=auditadm_r TYPE=auditadm_t COMMAND
.br
sudo will run COMMAND as staff_u:auditadm_r:auditadm_t:LEVEL

You might also need to add one or more of these new roles to your SELinux user record.

List the SELinux roles your SELinux user can reach by executing:

.B $ semanage user -l |grep selinux_name

Modify the roles list and add staff_r to this list.

.B $ semanage user -m -R 'staff_r auditadm_r dbadm_r logadm_r secadm_r sysadm_r unconfined_r webadm_r' staff_u

For more details you can see semanage man page.


USERNAME ALL=(ALL) ROLE=dbadm_r TYPE=dbadm_t COMMAND
.br
sudo will run COMMAND as staff_u:dbadm_r:dbadm_t:LEVEL

You might also need to add one or more of these new roles to your SELinux user record.

List the SELinux roles your SELinux user can reach by executing:

.B $ semanage user -l |grep selinux_name

Modify the roles list and add staff_r to this list.

.B $ semanage user -m -R 'staff_r auditadm_r dbadm_r logadm_r secadm_r sysadm_r unconfined_r webadm_r' staff_u

For more details you can see semanage man page.


USERNAME ALL=(ALL) ROLE=logadm_r TYPE=logadm_t COMMAND
.br
sudo will run COMMAND as staff_u:logadm_r:logadm_t:LEVEL

You might also need to add one or more of these new roles to your SELinux user record.

List the SELinux roles your SELinux user can reach by executing:

.B $ semanage user -l |grep selinux_name

Modify the roles list and add staff_r to this list.

.B $ semanage user -m -R 'staff_r auditadm_r dbadm_r logadm_r secadm_r sysadm_r unconfined_r webadm_r' staff_u

For more details you can see semanage man page.


USERNAME ALL=(ALL) ROLE=secadm_r TYPE=secadm_t COMMAND
.br
sudo will run COMMAND as staff_u:secadm_r:secadm_t:LEVEL

You might also need to add one or more of these new roles to your SELinux user record.

List the SELinux roles your SELinux user can reach by executing:

.B $ semanage user -l |grep selinux_name

Modify the roles list and add staff_r to this list.

.B $ semanage user -m -R 'staff_r auditadm_r dbadm_r logadm_r secadm_r sysadm_r unconfined_r webadm_r' staff_u

For more details you can see semanage man page.


USERNAME ALL=(ALL) ROLE=sysadm_r TYPE=sysadm_t COMMAND
.br
sudo will run COMMAND as staff_u:sysadm_r:sysadm_t:LEVEL

You might also need to add one or more of these new roles to your SELinux user record.

List the SELinux roles your SELinux user can reach by executing:

.B $ semanage user -l |grep selinux_name

Modify the roles list and add staff_r to this list.

.B $ semanage user -m -R 'staff_r auditadm_r dbadm_r logadm_r secadm_r sysadm_r unconfined_r webadm_r' staff_u

For more details you can see semanage man page.


USERNAME ALL=(ALL) ROLE=unconfined_r TYPE=unconfined_t COMMAND
.br
sudo will run COMMAND as staff_u:unconfined_r:unconfined_t:LEVEL

You might also need to add one or more of these new roles to your SELinux user record.

List the SELinux roles your SELinux user can reach by executing:

.B $ semanage user -l |grep selinux_name

Modify the roles list and add staff_r to this list.

.B $ semanage user -m -R 'staff_r auditadm_r dbadm_r logadm_r secadm_r sysadm_r unconfined_r webadm_r' staff_u

For more details you can see semanage man page.


USERNAME ALL=(ALL) ROLE=webadm_r TYPE=webadm_t COMMAND
.br
sudo will run COMMAND as staff_u:webadm_r:webadm_t:LEVEL

You might also need to add one or more of these new roles to your SELinux user record.

List the SELinux roles your SELinux user can reach by executing:

.B $ semanage user -l |grep selinux_name

Modify the roles list and add staff_r to this list.

.B $ semanage user -m -R 'staff_r auditadm_r dbadm_r logadm_r secadm_r sysadm_r unconfined_r webadm_r' staff_u

For more details you can see semanage man page.


The SELinux type staff_t is not allowed to execute sudo.

.SH X WINDOWS LOGIN

The SELinux user staff_u is able to X Windows login.

.SH NETWORK

.TP
The SELinux user staff_u is able to listen on the following tcp ports.

.B xserver_port_t: 6000-6020

.TP
The SELinux user staff_u is able to connect to the following tcp ports.

.B all ports

.TP
The SELinux user staff_u is able to listen on the following udp ports.

.B ephemeral_port_t: 32768-61000

.B all ports with out defined types

.TP
The SELinux user staff_u is able to connect to the following tcp ports.

.B all ports

.SH BOOLEANS
SELinux policy is customizable based on least access required.  staff policy is extremely flexible and has several booleans that allow you to manipulate the policy and run staff with the tightest access possible.


.PP
If you want to allow staff user to create and transition to svirt domains, you must turn on the staff_use_svirt boolean. Enabled by default.

.EX
.B setsebool -P staff_use_svirt 1

.EE

.PP
If you want to allow users to resolve user passwd entries directly from ldap rather then using a sssd server, you must turn on the authlogin_nsswitch_use_ldap boolean. Disabled by default.

.EX
.B setsebool -P authlogin_nsswitch_use_ldap 1

.EE

.PP
If you want to deny user domains applications to map a memory region as both executable and writable, this is dangerous and the executable should be reported in bugzilla, you must turn on the deny_execmem boolean. Enabled by default.

.EX
.B setsebool -P deny_execmem 1

.EE

.PP
If you want to allow sysadm to debug or ptrace all processes, you must turn on the deny_ptrace boolean. Enabled by default.

.EX
.B setsebool -P deny_ptrace 1

.EE

.PP
If you want to allow all domains to use other domains file descriptors, you must turn on the domain_fd_use boolean. Enabled by default.

.EX
.B setsebool -P domain_fd_use 1

.EE

.PP
If you want to allow all domains to have the kernel load modules, you must turn on the domain_kernel_load_modules boolean. Disabled by default.

.EX
.B setsebool -P domain_kernel_load_modules 1

.EE

.PP
If you want to allow all domains to execute in fips_mode, you must turn on the fips_mode boolean. Enabled by default.

.EX
.B setsebool -P fips_mode 1

.EE

.PP
If you want to determine whether calling user domains can execute Git daemon in the git_session_t domain, you must turn on the git_session_users boolean. Disabled by default.

.EX
.B setsebool -P git_session_users 1

.EE

.PP
If you want to enable reading of urandom for all domains, you must turn on the global_ssp boolean. Disabled by default.

.EX
.B setsebool -P global_ssp 1

.EE

.PP
If you want to allow httpd cgi support, you must turn on the httpd_enable_cgi boolean. Enabled by default.

.EX
.B setsebool -P httpd_enable_cgi 1

.EE

.PP
If you want to unify HTTPD handling of all content files, you must turn on the httpd_unified boolean. Disabled by default.

.EX
.B setsebool -P httpd_unified 1

.EE

.PP
If you want to allow confined applications to run with kerberos, you must turn on the kerberos_enabled boolean. Enabled by default.

.EX
.B setsebool -P kerberos_enabled 1

.EE

.PP
If you want to allow logging in and using the system from /dev/console, you must turn on the login_console_enabled boolean. Enabled by default.

.EX
.B setsebool -P login_console_enabled 1

.EE

.PP
If you want to allow system to run with NIS, you must turn on the nis_enabled boolean. Disabled by default.

.EX
.B setsebool -P nis_enabled 1

.EE

.PP
If you want to allow confined applications to use nscd shared memory, you must turn on the nscd_use_shm boolean. Disabled by default.

.EX
.B setsebool -P nscd_use_shm 1

.EE

.PP
If you want to determine whether calling user domains can execute Polipo daemon in the polipo_session_t domain, you must turn on the polipo_session_users boolean. Disabled by default.

.EX
.B setsebool -P polipo_session_users 1

.EE

.PP
If you want to allow pppd to be run for a regular user, you must turn on the pppd_for_user boolean. Disabled by default.

.EX
.B setsebool -P pppd_for_user 1

.EE

.PP
If you want to disallow programs, such as newrole, from transitioning to administrative user domains, you must turn on the secure_mode boolean. Disabled by default.

.EX
.B setsebool -P secure_mode 1

.EE

.PP
If you want to allow regular users direct dri device access, you must turn on the selinuxuser_direct_dri_enabled boolean. Enabled by default.

.EX
.B setsebool -P selinuxuser_direct_dri_enabled 1

.EE

.PP
If you want to allow all unconfined executables to use libraries requiring text relocation that are not labeled textrel_shlib_t, you must turn on the selinuxuser_execmod boolean. Enabled by default.

.EX
.B setsebool -P selinuxuser_execmod 1

.EE

.PP
If you want to allow unconfined executables to make their stack executable.  This should never, ever be necessary. Probably indicates a badly coded executable, but could indicate an attack. This executable should be reported in bugzilla, you must turn on the selinuxuser_execstack boolean. Enabled by default.

.EX
.B setsebool -P selinuxuser_execstack 1

.EE

.PP
If you want to allow users to connect to the local mysql server, you must turn on the selinuxuser_mysql_connect_enabled boolean. Disabled by default.

.EX
.B setsebool -P selinuxuser_mysql_connect_enabled 1

.EE

.PP
If you want to allow users to connect to PostgreSQL, you must turn on the selinuxuser_postgresql_connect_enabled boolean. Disabled by default.

.EX
.B setsebool -P selinuxuser_postgresql_connect_enabled 1

.EE

.PP
If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the selinuxuser_rw_noexattrfile boolean. Enabled by default.

.EX
.B setsebool -P selinuxuser_rw_noexattrfile 1

.EE

.PP
If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the selinuxuser_tcp_server boolean. Disabled by default.

.EX
.B setsebool -P selinuxuser_tcp_server 1

.EE

.PP
If you want to allow user  to use ssh chroot environment, you must turn on the selinuxuser_use_ssh_chroot boolean. Disabled by default.

.EX
.B setsebool -P selinuxuser_use_ssh_chroot 1

.EE

.PP
If you want to allow user music sharing, you must turn on the selinuxuser_user_share_music boolean. Disabled by default.

.EX
.B setsebool -P selinuxuser_user_share_music 1

.EE

.PP
If you want to allow ssh logins as sysadm_r:sysadm_t, you must turn on the ssh_sysadm_login boolean. Disabled by default.

.EX
.B setsebool -P ssh_sysadm_login 1

.EE

.PP
If you want to support NFS home directories, you must turn on the use_nfs_home_dirs boolean. Enabled by default.

.EX
.B setsebool -P use_nfs_home_dirs 1

.EE

.PP
If you want to support SAMBA home directories, you must turn on the use_samba_home_dirs boolean. Disabled by default.

.EX
.B setsebool -P use_samba_home_dirs 1

.EE

.PP
If you want to allow the graphical login program to login directly as sysadm_r:sysadm_t, you must turn on the xdm_sysadm_login boolean. Enabled by default.

.EX
.B setsebool -P xdm_sysadm_login 1

.EE

.PP
If you want to allows clients to write to the X server shared memory segments, you must turn on the xserver_clients_write_xshm boolean. Disabled by default.

.EX
.B setsebool -P xserver_clients_write_xshm 1

.EE

.PP
If you want to support X userspace object manager, you must turn on the xserver_object_manager boolean. Enabled by default.

.EX
.B setsebool -P xserver_object_manager 1

.EE

.SH HOME_EXEC

The SELinux user staff_u is able execute home content files.

.SH TRANSITIONS

Three things can happen when staff_t attempts to execute a program.

\fB1.\fP SELinux Policy can deny staff_t from executing the program.

.TP

\fB2.\fP SELinux Policy can allow staff_t to execute the program in the current user type.

Execute the following to see the types that the SELinux user staff_t can execute without transitioning:

.B search -A -s staff_t -c file -p execute_no_trans

.TP

\fB3.\fP SELinux can allow staff_t to execute the program and transition to a new type.

Execute the following to see the types that the SELinux user staff_t can execute and transition:

.B $ search -A -s staff_t -c process -p transition


.SH "MANAGED FILES"

The SELinux process type staff_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.

.br
.B anon_inodefs_t


.br
.B auth_cache_t

	/var/cache/coolkey(/.*)?
.br

.br
.B bluetooth_helper_tmp_t


.br
.B bluetooth_helper_tmpfs_t


.br
.B cgroup_t

	/cgroup
.br
	/sys/fs/cgroup
.br

.br
.B chrome_sandbox_tmpfs_t


.br
.B cifs_t


.br
.B games_data_t

	/var/games(/.*)?
.br
	/var/lib/games(/.*)?
.br

.br
.B gpg_agent_tmp_t

	/home/[^/]*/\.gnupg/log-socket
.br
	/home/pwalsh/\.gnupg/log-socket
.br
	/home/dwalsh/\.gnupg/log-socket
.br
	/var/lib/xguest/home/xguest/\.gnupg/log-socket
.br

.br
.B httpd_user_content_t

	/home/[^/]*/((www)|(web)|(public_html))(/.+)?
.br
	/home/pwalsh/((www)|(web)|(public_html))(/.+)?
.br
	/home/dwalsh/((www)|(web)|(public_html))(/.+)?
.br
	/var/lib/xguest/home/xguest/((www)|(web)|(public_html))(/.+)?
.br

.br
.B httpd_user_htaccess_t

	/home/[^/]*/((www)|(web)|(public_html))(/.*)?/\.htaccess
.br
	/home/pwalsh/((www)|(web)|(public_html))(/.*)?/\.htaccess
.br
	/home/dwalsh/((www)|(web)|(public_html))(/.*)?/\.htaccess
.br
	/var/lib/xguest/home/xguest/((www)|(web)|(public_html))(/.*)?/\.htaccess
.br

.br
.B httpd_user_ra_content_t

	/home/[^/]*/((www)|(web)|(public_html))(/.*)?/logs(/.*)?
.br
	/home/pwalsh/((www)|(web)|(public_html))(/.*)?/logs(/.*)?
.br
	/home/dwalsh/((www)|(web)|(public_html))(/.*)?/logs(/.*)?
.br
	/var/lib/xguest/home/xguest/((www)|(web)|(public_html))(/.*)?/logs(/.*)?
.br

.br
.B httpd_user_rw_content_t


.br
.B httpd_user_script_exec_t

	/home/[^/]*/((www)|(web)|(public_html))/cgi-bin(/.+)?
.br
	/home/pwalsh/((www)|(web)|(public_html))/cgi-bin(/.+)?
.br
	/home/dwalsh/((www)|(web)|(public_html))/cgi-bin(/.+)?
.br
	/var/lib/xguest/home/xguest/((www)|(web)|(public_html))/cgi-bin(/.+)?
.br

.br
.B iceauth_home_t

	/root/\.DCOP.*
.br
	/root/\.ICEauthority.*
.br
	/home/[^/]*/\.DCOP.*
.br
	/home/[^/]*/\.ICEauthority.*
.br
	/home/pwalsh/\.DCOP.*
.br
	/home/pwalsh/\.ICEauthority.*
.br
	/home/dwalsh/\.DCOP.*
.br
	/home/dwalsh/\.ICEauthority.*
.br
	/var/lib/xguest/home/xguest/\.DCOP.*
.br
	/var/lib/xguest/home/xguest/\.ICEauthority.*
.br

.br
.B irc_home_t

	/home/[^/]*/\.irssi(/.*)?
.br
	/home/[^/]*/\.ircmotd
.br
	/home/pwalsh/\.irssi(/.*)?
.br
	/home/pwalsh/\.ircmotd
.br
	/home/dwalsh/\.irssi(/.*)?
.br
	/home/dwalsh/\.ircmotd
.br
	/var/lib/xguest/home/xguest/\.irssi(/.*)?
.br
	/var/lib/xguest/home/xguest/\.ircmotd
.br

.br
.B mail_spool_t

	/var/mail(/.*)?
.br
	/var/spool/imap(/.*)?
.br
	/var/spool/mail(/.*)?
.br

.br
.B mqueue_spool_t

	/var/spool/(client)?mqueue(/.*)?
.br
	/var/spool/mqueue\.in(/.*)?
.br

.br
.B nfsd_rw_t


.br
.B noxattrfs

	all files on file systems which do not support extended attributes
.br

.br
.B sandbox_file_t


.br
.B sandbox_tmpfs_type

	all sandbox content in tmpfs file systems
.br

.br
.B screen_home_t

	/root/\.screen(/.*)?
.br
	/home/[^/]*/\.screen(/.*)?
.br
	/home/[^/]*/\.screenrc
.br
	/home/pwalsh/\.screen(/.*)?
.br
	/home/pwalsh/\.screenrc
.br
	/home/dwalsh/\.screen(/.*)?
.br
	/home/dwalsh/\.screenrc
.br
	/var/lib/xguest/home/xguest/\.screen(/.*)?
.br
	/var/lib/xguest/home/xguest/\.screenrc
.br

.br
.B security_t

	/selinux
.br

.br
.B systemd_passwd_var_run_t

	/var/run/systemd/ask-password(/.*)?
.br
	/var/run/systemd/ask-password-block(/.*)?
.br

.br
.B usbfs_t


.br
.B user_fonts_cache_t

	/root/\.fontconfig(/.*)?
.br
	/root/\.fonts/auto(/.*)?
.br
	/root/\.fonts\.cache-.*
.br
	/home/[^/]*/\.fontconfig(/.*)?
.br
	/home/[^/]*/\.fonts/auto(/.*)?
.br
	/home/[^/]*/\.fonts\.cache-.*
.br
	/home/pwalsh/\.fontconfig(/.*)?
.br
	/home/pwalsh/\.fonts/auto(/.*)?
.br
	/home/pwalsh/\.fonts\.cache-.*
.br
	/home/dwalsh/\.fontconfig(/.*)?
.br
	/home/dwalsh/\.fonts/auto(/.*)?
.br
	/home/dwalsh/\.fonts\.cache-.*
.br
	/var/lib/xguest/home/xguest/\.fontconfig(/.*)?
.br
	/var/lib/xguest/home/xguest/\.fonts/auto(/.*)?
.br
	/var/lib/xguest/home/xguest/\.fonts\.cache-.*
.br

.br
.B user_fonts_t

	/root/\.fonts(/.*)?
.br
	/tmp/\.font-unix(/.*)?
.br
	/home/[^/]*/\.fonts(/.*)?
.br
	/home/pwalsh/\.fonts(/.*)?
.br
	/home/dwalsh/\.fonts(/.*)?
.br
	/var/lib/xguest/home/xguest/\.fonts(/.*)?
.br

.br
.B user_home_type

	all user home files
.br

.br
.B user_tmp_type

	all user tmp files
.br

.br
.B user_tmpfs_type

	all user content in tmpfs file systems
.br

.br
.B virt_image_type

	all virtual image files
.br

.br
.B xauth_home_t

	/root/\.xauth.*
.br
	/root/\.Xauth.*
.br
	/root/\.serverauth.*
.br
	/root/\.Xauthority.*
.br
	/var/lib/pqsql/\.xauth.*
.br
	/var/lib/pqsql/\.Xauthority.*
.br
	/var/lib/nxserver/home/\.xauth.*
.br
	/var/lib/nxserver/home/\.Xauthority.*
.br
	/home/[^/]*/\.xauth.*
.br
	/home/[^/]*/\.Xauth.*
.br
	/home/[^/]*/\.serverauth.*
.br
	/home/[^/]*/\.Xauthority.*
.br
	/home/pwalsh/\.xauth.*
.br
	/home/pwalsh/\.Xauth.*
.br
	/home/pwalsh/\.serverauth.*
.br
	/home/pwalsh/\.Xauthority.*
.br
	/home/dwalsh/\.xauth.*
.br
	/home/dwalsh/\.Xauth.*
.br
	/home/dwalsh/\.serverauth.*
.br
	/home/dwalsh/\.Xauthority.*
.br
	/var/lib/xguest/home/xguest/\.xauth.*
.br
	/var/lib/xguest/home/xguest/\.Xauth.*
.br
	/var/lib/xguest/home/xguest/\.serverauth.*
.br
	/var/lib/xguest/home/xguest/\.Xauthority.*
.br

.br
.B xdm_tmp_t

	/tmp/\.X11-unix(/.*)?
.br
	/tmp/\.ICE-unix(/.*)?
.br
	/tmp/\.X0-lock
.br

.br
.B xserver_tmpfs_t


.SH "COMMANDS"
.B semanage fcontext
can also be used to manipulate default file context mappings.
.PP
.B semanage permissive
can also be used to manipulate whether or not a process type is permissive.
.PP
.B semanage module
can also be used to enable/disable/install/remove policy modules.

.B semanage boolean
can also be used to manipulate the booleans

.PP
.B system-config-selinux
is a GUI tool available to customize SELinux policy settings.

.SH AUTHOR
This manual page was auto-generated using
.B "sepolicy manpage"
by Dan Walsh.

.SH "SEE ALSO"
selinux(8), staff(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
, setsebool(8), staff_consolehelper_selinux(8), staff_dbusd_selinux(8), staff_gkeyringd_selinux(8), staff_screen_selinux(8), staff_seunshare_selinux(8), staff_ssh_agent_selinux(8), staff_sudo_selinux(8), staff_wine_selinux(8)