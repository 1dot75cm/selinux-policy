.TH  "afs_selinux"  "8"  "13-01-16" "afs" "SELinux Policy documentation for afs"
.SH "NAME"
afs_selinux \- Security Enhanced Linux Policy for the afs processes
.SH "DESCRIPTION"

Security-Enhanced Linux secures the afs processes via flexible mandatory access control.

The afs processes execute with the afs_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.

For example:

.B ps -eZ | grep afs_t


.SH "ENTRYPOINTS"

The afs_t SELinux type can be entered via the \fBafs_exec_t\fP file type.

The default entrypoint paths for the afs_t domain are the following:

/usr/sbin/afsd, /usr/vice/etc/afsd
.SH PROCESS TYPES
SELinux defines process types (domains) for each process running on the system
.PP
You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
.PP
Policy governs the access confined processes have to files.
SELinux afs policy is very flexible allowing users to setup their afs processes in as secure a method as possible.
.PP
The following process types are defined for afs:

.EX
.B afs_kaserver_t, afs_t, afs_fsserver_t, afs_bosserver_t, afs_vlserver_t, afs_ptserver_t
.EE
.PP
Note:
.B semanage permissive -a afs_t
can be used to make the process type afs_t permissive. SELinux does not deny access to permissive process types, but the AVC (SELinux denials) messages are still generated.

.SH BOOLEANS
SELinux policy is customizable based on least access required.  afs policy is extremely flexible and has several booleans that allow you to manipulate the policy and run afs with the tightest access possible.


.PP
If you want to allow all daemons to write corefiles to /, you must turn on the daemons_dump_core boolean. Disabled by default.

.EX
.B setsebool -P daemons_dump_core 1

.EE

.PP
If you want to allow all daemons to use tcp wrappers, you must turn on the daemons_use_tcp_wrapper boolean. Disabled by default.

.EX
.B setsebool -P daemons_use_tcp_wrapper 1

.EE

.PP
If you want to allow all daemons the ability to read/write terminals, you must turn on the daemons_use_tty boolean. Disabled by default.

.EX
.B setsebool -P daemons_use_tty 1

.EE

.PP
If you want to allow sysadm to debug or ptrace all processes, you must turn on the deny_ptrace boolean. Enabled by default.

.EX
.B setsebool -P deny_ptrace 1

.EE

.PP
If you want to allow all domains to use other domains file descriptors, you must turn on the domain_fd_use boolean. Enabled by default.

.EX
.B setsebool -P domain_fd_use 1

.EE

.PP
If you want to allow all domains to have the kernel load modules, you must turn on the domain_kernel_load_modules boolean. Disabled by default.

.EX
.B setsebool -P domain_kernel_load_modules 1

.EE

.PP
If you want to allow all domains to execute in fips_mode, you must turn on the fips_mode boolean. Enabled by default.

.EX
.B setsebool -P fips_mode 1

.EE

.PP
If you want to enable reading of urandom for all domains, you must turn on the global_ssp boolean. Disabled by default.

.EX
.B setsebool -P global_ssp 1

.EE

.PP
If you want to allow confined applications to use nscd shared memory, you must turn on the nscd_use_shm boolean. Enabled by default.

.EX
.B setsebool -P nscd_use_shm 1

.EE

.SH PORT TYPES
SELinux defines port types to represent TCP and UDP ports.
.PP
You can see the types associated with a port by using the following command:

.B semanage port -l

.PP
Policy governs the access confined processes have to these ports.
SELinux afs policy is very flexible allowing users to setup their afs processes in as secure a method as possible.
.PP
The following port types are defined for afs:

.EX
.TP 5
.B afs3_callback_port_t
.TP 10
.EE


Default Defined Ports:
tcp 7001
.EE
udp 7001
.EE

.EX
.TP 5
.B afs_bos_port_t
.TP 10
.EE


Default Defined Ports:
udp 7007
.EE

.EX
.TP 5
.B afs_fs_port_t
.TP 10
.EE


Default Defined Ports:
tcp 2040
.EE
udp 7000,7005
.EE

.EX
.TP 5
.B afs_ka_port_t
.TP 10
.EE


Default Defined Ports:
udp 7004
.EE

.EX
.TP 5
.B afs_pt_port_t
.TP 10
.EE


Default Defined Ports:
udp 7002
.EE

.EX
.TP 5
.B afs_vl_port_t
.TP 10
.EE


Default Defined Ports:
udp 7003
.EE
.SH "MANAGED FILES"

The SELinux process type afs_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.

.br
.B afs_cache_t

	/var/cache/(open)?afs(/.*)?
.br
	/usr/vice/cache(/.*)?
.br

.br
.B etc_runtime_t

	/[^/]+
.br
	/etc/mtab.*
.br
	/etc/blkid(/.*)?
.br
	/etc/nologin.*
.br
	/etc/\.fstab\.hal\..+
.br
	/halt
.br
	/fastboot
.br
	/poweroff
.br
	/etc/cmtab
.br
	/forcefsck
.br
	/\.autofsck
.br
	/\.suspended
.br
	/fsckoptions
.br
	/\.autorelabel
.br
	/etc/securetty
.br
	/etc/nohotplug
.br
	/etc/killpower
.br
	/etc/ioctl\.save
.br
	/etc/fstab\.REVOKE
.br
	/etc/network/ifstate
.br
	/etc/sysconfig/hwconf
.br
	/etc/ptal/ptal-printd-like
.br
	/etc/sysconfig/iptables\.save
.br
	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
.br
	/etc/X11/xorg\.conf\.d/00-system-setup-keyboard\.conf
.br

.br
.B root_t

	/
.br
	/initrd
.br

.br
.B unlabeled_t


.SH FILE CONTEXTS
SELinux requires files to have an extended attribute to define the file type.
.PP
You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
.PP
Policy governs the access confined processes have to these files.
SELinux afs policy is very flexible allowing users to setup their afs processes in as secure a method as possible.
.PP

.PP
.B STANDARD FILE CONTEXT

SELinux defines the file context types for the afs, if you wanted to
store files with these types in a diffent paths, you need to execute the semanage command to sepecify alternate labeling and then use restorecon to put the labels on disk.

.B semanage fcontext -a -t afs_bosserver_exec_t '/srv/afs/content(/.*)?'
.br
.B restorecon -R -v /srv/myafs_content

Note: SELinux often uses regular expressions to specify labels that match multiple files.

.I The following file types are defined for afs:


.EX
.PP
.B afs_bosserver_exec_t
.EE

- Set files with the afs_bosserver_exec_t type, if you want to transition an executable to the afs_bosserver_t domain.

.br
.TP 5
Paths:
/usr/sbin/bosserver, /usr/afs/bin/bosserver

.EX
.PP
.B afs_cache_t
.EE

- Set files with the afs_cache_t type, if you want to store the files under the /var/cache directory.

.br
.TP 5
Paths:
/var/cache/(open)?afs(/.*)?, /usr/vice/cache(/.*)?

.EX
.PP
.B afs_config_t
.EE

- Set files with the afs_config_t type, if you want to treat the files as afs configuration data, usually stored under the /etc directory.

.br
.TP 5
Paths:
/etc/(open)?afs(/.*)?, /usr/afs/etc(/.*)?, /usr/afs/local(/.*)?

.EX
.PP
.B afs_dbdir_t
.EE

- Set files with the afs_dbdir_t type, if you want to treat the files as afs dbdir data.


.EX
.PP
.B afs_exec_t
.EE

- Set files with the afs_exec_t type, if you want to transition an executable to the afs_t domain.

.br
.TP 5
Paths:
/usr/sbin/afsd, /usr/vice/etc/afsd

.EX
.PP
.B afs_files_t
.EE

- Set files with the afs_files_t type, if you want to treat the files as afs content.

.br
.TP 5
Paths:
/vicepa, /vicepb, /vicepc

.EX
.PP
.B afs_fsserver_exec_t
.EE

- Set files with the afs_fsserver_exec_t type, if you want to transition an executable to the afs_fsserver_t domain.

.br
.TP 5
Paths:
/usr/afs/bin/salvager, /usr/afs/bin/volserver, /usr/afs/bin/fileserver, /usr/libexec/openafs/salvager, /usr/libexec/openafs/volserver, /usr/libexec/openafs/fileserver

.EX
.PP
.B afs_initrc_exec_t
.EE

- Set files with the afs_initrc_exec_t type, if you want to transition an executable to the afs_initrc_t domain.

.br
.TP 5
Paths:
/etc/rc\.d/init\.d/(open)?afs, /etc/rc\.d/init\.d/openafs-client

.EX
.PP
.B afs_ka_db_t
.EE

- Set files with the afs_ka_db_t type, if you want to treat the files as afs ka database content.


.EX
.PP
.B afs_kaserver_exec_t
.EE

- Set files with the afs_kaserver_exec_t type, if you want to transition an executable to the afs_kaserver_t domain.

.br
.TP 5
Paths:
/usr/afs/bin/kaserver, /usr/libexec/openafs/kaserver

.EX
.PP
.B afs_logfile_t
.EE

- Set files with the afs_logfile_t type, if you want to treat the files as afs logfile data.


.EX
.PP
.B afs_pt_db_t
.EE

- Set files with the afs_pt_db_t type, if you want to treat the files as afs pt database content.


.EX
.PP
.B afs_ptserver_exec_t
.EE

- Set files with the afs_ptserver_exec_t type, if you want to transition an executable to the afs_ptserver_t domain.

.br
.TP 5
Paths:
/usr/afs/bin/ptserver, /usr/libexec/openafs/ptserver

.EX
.PP
.B afs_vl_db_t
.EE

- Set files with the afs_vl_db_t type, if you want to treat the files as afs vl database content.


.EX
.PP
.B afs_vlserver_exec_t
.EE

- Set files with the afs_vlserver_exec_t type, if you want to transition an executable to the afs_vlserver_t domain.

.br
.TP 5
Paths:
/usr/afs/bin/vlserver, /usr/libexec/openafs/vlserver

.PP
Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
.B semanage fcontext
command.  This will modify the SELinux labeling database.  You will need to use
.B restorecon
to apply the labels.

.SH "COMMANDS"
.B semanage fcontext
can also be used to manipulate default file context mappings.
.PP
.B semanage permissive
can also be used to manipulate whether or not a process type is permissive.
.PP
.B semanage module
can also be used to enable/disable/install/remove policy modules.

.B semanage port
can also be used to manipulate the port definitions

.B semanage boolean
can also be used to manipulate the booleans

.PP
.B system-config-selinux
is a GUI tool available to customize SELinux policy settings.

.SH AUTHOR
This manual page was auto-generated using
.B "sepolicy manpage"
by Dan Walsh.

.SH "SEE ALSO"
selinux(8), afs(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
, setsebool(8), afs_bosserver_selinux(8), afs_fsserver_selinux(8), afs_kaserver_selinux(8), afs_ptserver_selinux(8), afs_vlserver_selinux(8)