.TH  "abrt_selinux"  "8"  "12-11-01" "abrt" "SELinux Policy documentation for abrt"
.SH "NAME"
abrt_selinux \- Security Enhanced Linux Policy for the abrt processes
.SH "DESCRIPTION"

Security-Enhanced Linux secures the abrt processes via flexible mandatory access control.

The abrt processes execute with the abrt_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.

For example:

.B ps -eZ | grep abrt_t


.SH "ENTRYPOINTS"

The abrt_t SELinux type can be entered via the "abrt_exec_t" file type.  The default entrypoint paths for the abrt_t domain are the following:"

/usr/sbin/abrtd, /usr/sbin/abrt-dbus
.SH PROCESS TYPES
SELinux defines process types (domains) for each process running on the system
.PP
You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
.PP
Policy governs the access confined processes have to files.
SELinux abrt policy is very flexible allowing users to setup their abrt processes in as secure a method as possible.
.PP
The following process types are defined for abrt:

.EX
.B abrt_handle_event_t, abrt_helper_t, abrt_retrace_coredump_t, abrt_t, abrt_retrace_worker_t, abrt_dump_oops_t, abrt_watch_log_t
.EE
.PP
Note:
.B semanage permissive -a PROCESS_TYPE
can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.

.SH BOOLEANS
SELinux policy is customizable based on least access required.  abrt policy is extremely flexible and has several booleans that allow you to manipulate the policy and run abrt with the tightest access possible.


.PP
If you want to allow ABRT to run in abrt_handle_event_t domain to handle ABRT event scripts, you must turn on the abrt_handle_event boolean.

.EX
.B setsebool -P abrt_handle_event 1
.EE

.PP
If you want to allow ABRT to run in abrt_handle_event_t domain to handle ABRT event scripts, you must turn on the abrt_handle_event boolean.

.EX
.B setsebool -P abrt_handle_event 1
.EE

.SH SHARING FILES
If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
.TP
Allow abrt servers to read the /var/abrt directory by adding the public_content_t file type to the directory and by restoring the file type.
.PP
.B
semanage fcontext -a -t public_content_t "/var/abrt(/.*)?"
.br
.B restorecon -F -R -v /var/abrt
.pp
.TP
Allow abrt servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_abrtd_anon_write boolean to be set.
.PP
.B
semanage fcontext -a -t public_content_rw_t "/var/abrt/incoming(/.*)?"
.br
.B restorecon -F -R -v /var/abrt/incoming


.PP
If you want to allow ABRT to modify public files used for public file transfer services., you must turn on the abrt_anon_write boolean.

.EX
.B setsebool -P abrt_anon_write 1
.EE

.PP
If you want to allow ABRT to modify public files used for public file transfer services., you must turn on the abrt_anon_write boolean.

.EX
.B setsebool -P abrt_anon_write 1
.EE

.SH FILE CONTEXTS
SELinux requires files to have an extended attribute to define the file type.
.PP
You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
.PP
Policy governs the access confined processes have to these files.
SELinux abrt policy is very flexible allowing users to setup their abrt processes in as secure a method as possible.
.PP
The following file types are defined for abrt:


.EX
.PP
.B abrt_dump_oops_exec_t
.EE

- Set files with the abrt_dump_oops_exec_t type, if you want to transition an executable to the abrt_dump_oops_t domain.


.EX
.PP
.B abrt_etc_t
.EE

- Set files with the abrt_etc_t type, if you want to store abrt files in the /etc directories.


.EX
.PP
.B abrt_exec_t
.EE

- Set files with the abrt_exec_t type, if you want to transition an executable to the abrt_t domain.


.EX
.PP
.B abrt_handle_event_exec_t
.EE

- Set files with the abrt_handle_event_exec_t type, if you want to transition an executable to the abrt_handle_event_t domain.


.EX
.PP
.B abrt_helper_exec_t
.EE

- Set files with the abrt_helper_exec_t type, if you want to transition an executable to the abrt_helper_t domain.


.EX
.PP
.B abrt_initrc_exec_t
.EE

- Set files with the abrt_initrc_exec_t type, if you want to transition an executable to the abrt_initrc_t domain.


.EX
.PP
.B abrt_retrace_cache_t
.EE

- Set files with the abrt_retrace_cache_t type, if you want to store the files under the /var/cache directory.


.EX
.PP
.B abrt_retrace_coredump_exec_t
.EE

- Set files with the abrt_retrace_coredump_exec_t type, if you want to transition an executable to the abrt_retrace_coredump_t domain.


.EX
.PP
.B abrt_retrace_spool_t
.EE

- Set files with the abrt_retrace_spool_t type, if you want to store the abrt retrace files under the /var/spool directory.


.EX
.PP
.B abrt_retrace_worker_exec_t
.EE

- Set files with the abrt_retrace_worker_exec_t type, if you want to transition an executable to the abrt_retrace_worker_t domain.


.EX
.PP
.B abrt_tmp_t
.EE

- Set files with the abrt_tmp_t type, if you want to store abrt temporary files in the /tmp directories.


.EX
.PP
.B abrt_unit_file_t
.EE

- Set files with the abrt_unit_file_t type, if you want to treat the files as abrt unit content.


.EX
.PP
.B abrt_var_cache_t
.EE

- Set files with the abrt_var_cache_t type, if you want to store the files under the /var/cache directory.


.EX
.PP
.B abrt_var_log_t
.EE

- Set files with the abrt_var_log_t type, if you want to treat the data as abrt var log data, usually stored under the /var/log directory.


.EX
.PP
.B abrt_var_run_t
.EE

- Set files with the abrt_var_run_t type, if you want to store the abrt files under the /run directory.


.EX
.PP
.B abrt_watch_log_exec_t
.EE

- Set files with the abrt_watch_log_exec_t type, if you want to transition an executable to the abrt_watch_log_t domain.


.PP
Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
.B semanage fcontext
command.  This will modify the SELinux labeling database.  You will need to use
.B restorecon
to apply the labels.

.SH "MANAGED FILES"

The SELinux process type abrt_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.

.br
.B abrt_etc_t

	/etc/abrt(/.*)?
.br

.br
.B abrt_tmp_t


.br
.B abrt_var_cache_t

	/var/cache/abrt(/.*)?
.br
	/var/spool/abrt(/.*)?
.br
	/var/cache/abrt-di(/.*)?
.br

.br
.B abrt_var_log_t

	/var/log/abrt-logger
.br

.br
.B abrt_var_run_t

	/var/run/abrt(/.*)?
.br
	/var/run/abrtd?\.lock
.br
	/var/run/abrtd?\.socket
.br
	/var/run/abrt\.pid
.br

.br
.B rpm_log_t

	/var/log/yum\.log.*
.br

.br
.B rpm_var_cache_t

	/var/cache/yum(/.*)?
.br
	/var/spool/up2date(/.*)?
.br
	/var/cache/PackageKit(/.*)?
.br

.br
.B rpm_var_run_t

	/var/run/yum.*
.br
	/var/run/PackageKit(/.*)?
.br

.br
.B sysfs_t

	/sys(/.*)?
.br

.SH NSSWITCH DOMAIN

.PP
If you want to allow users to resolve user passwd entries directly from ldap rather then using a sssd serve for the abrt_helper_t, abrt_t, you must turn on the authlogin_nsswitch_use_ldap boolean.

.EX
.B setsebool -P authlogin_nsswitch_use_ldap 1
.EE

.PP
If you want to allow confined applications to run with kerberos for the abrt_helper_t, abrt_t, you must turn on the kerberos_enabled boolean.

.EX
.B setsebool -P kerberos_enabled 1
.EE

.SH "COMMANDS"
.B semanage fcontext
can also be used to manipulate default file context mappings.
.PP
.B semanage permissive
can also be used to manipulate whether or not a process type is permissive.
.PP
.B semanage module
can also be used to enable/disable/install/remove policy modules.

.B semanage boolean
can also be used to manipulate the booleans

.PP
.B system-config-selinux
is a GUI tool available to customize SELinux policy settings.

.SH AUTHOR
This manual page was auto-generated using
.B "sepolicy manpage"
by Dan Walsh.

.SH "SEE ALSO"
selinux(8), abrt(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
, setsebool(8), abrt_dump_oops_selinux(8), abrt_handle_event_selinux(8), abrt_helper_selinux(8), abrt_retrace_coredump_selinux(8), abrt_retrace_worker_selinux(8), abrt_watch_log_selinux(8)