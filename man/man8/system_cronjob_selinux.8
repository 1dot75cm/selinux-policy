.TH  "system_cronjob_selinux"  "8"  "13-01-16" "system_cronjob" "SELinux Policy documentation for system_cronjob"
.SH "NAME"
system_cronjob_selinux \- Security Enhanced Linux Policy for the system_cronjob processes
.SH "DESCRIPTION"

Security-Enhanced Linux secures the system_cronjob processes via flexible mandatory access control.

The system_cronjob processes execute with the system_cronjob_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.

For example:

.B ps -eZ | grep system_cronjob_t


.SH "ENTRYPOINTS"

The system_cronjob_t SELinux type can be entered via the \fBsystem_cron_spool_t, shell_exec_t, anacron_exec_t\fP file types.

The default entrypoint paths for the system_cronjob_t domain are the following:

/etc/cron\.d(/.*)?, /var/spool/anacron(/.*)?, /etc/crontab, /var/spool/fcron/systab, /var/spool/fcron/new\.systab, /var/spool/fcron/systab\.orig, /bin/d?ash, /bin/zsh.*, /bin/ksh.*, /usr/bin/d?ash, /usr/bin/ksh.*, /usr/bin/zsh.*, /bin/esh, /bin/mksh, /bin/sash, /bin/tcsh, /bin/yash, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/esh, /usr/bin/fish, /usr/bin/bash, /usr/bin/mksh, /usr/bin/sash, /usr/bin/tcsh, /usr/bin/yash, /sbin/nologin, /usr/sbin/sesh, /usr/bin/bash2, /usr/sbin/smrsh, /usr/bin/scponly, /usr/sbin/nologin, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /usr/sbin/anacron
.SH PROCESS TYPES
SELinux defines process types (domains) for each process running on the system
.PP
You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
.PP
Policy governs the access confined processes have to files.
SELinux system_cronjob policy is very flexible allowing users to setup their system_cronjob processes in as secure a method as possible.
.PP
The following process types are defined for system_cronjob:

.EX
.B system_cronjob_t
.EE
.PP
Note:
.B semanage permissive -a system_cronjob_t
can be used to make the process type system_cronjob_t permissive. SELinux does not deny access to permissive process types, but the AVC (SELinux denials) messages are still generated.

.SH BOOLEANS
SELinux policy is customizable based on least access required.  system_cronjob policy is extremely flexible and has several booleans that allow you to manipulate the policy and run system_cronjob with the tightest access possible.


.PP
If you want to allow users to resolve user passwd entries directly from ldap rather then using a sssd server, you must turn on the authlogin_nsswitch_use_ldap boolean. Disabled by default.

.EX
.B setsebool -P authlogin_nsswitch_use_ldap 1

.EE

.PP
If you want to allow system cron jobs to relabel filesystem for restoring file contexts, you must turn on the cron_can_relabel boolean. Enabled by default.

.EX
.B setsebool -P cron_can_relabel 1

.EE

.PP
If you want to allow all daemons to write corefiles to /, you must turn on the daemons_dump_core boolean. Disabled by default.

.EX
.B setsebool -P daemons_dump_core 1

.EE

.PP
If you want to allow all daemons to use tcp wrappers, you must turn on the daemons_use_tcp_wrapper boolean. Disabled by default.

.EX
.B setsebool -P daemons_use_tcp_wrapper 1

.EE

.PP
If you want to allow all daemons the ability to read/write terminals, you must turn on the daemons_use_tty boolean. Disabled by default.

.EX
.B setsebool -P daemons_use_tty 1

.EE

.PP
If you want to allow sysadm to debug or ptrace all processes, you must turn on the deny_ptrace boolean. Enabled by default.

.EX
.B setsebool -P deny_ptrace 1

.EE

.PP
If you want to allow all domains to use other domains file descriptors, you must turn on the domain_fd_use boolean. Enabled by default.

.EX
.B setsebool -P domain_fd_use 1

.EE

.PP
If you want to allow all domains to have the kernel load modules, you must turn on the domain_kernel_load_modules boolean. Disabled by default.

.EX
.B setsebool -P domain_kernel_load_modules 1

.EE

.PP
If you want to allow all domains to execute in fips_mode, you must turn on the fips_mode boolean. Enabled by default.

.EX
.B setsebool -P fips_mode 1

.EE

.PP
If you want to enable reading of urandom for all domains, you must turn on the global_ssp boolean. Disabled by default.

.EX
.B setsebool -P global_ssp 1

.EE

.PP
If you want to allow confined applications to run with kerberos, you must turn on the kerberos_enabled boolean. Enabled by default.

.EX
.B setsebool -P kerberos_enabled 1

.EE

.PP
If you want to allow system to run with NIS, you must turn on the nis_enabled boolean. Disabled by default.

.EX
.B setsebool -P nis_enabled 1

.EE

.PP
If you want to allow confined applications to use nscd shared memory, you must turn on the nscd_use_shm boolean. Disabled by default.

.EX
.B setsebool -P nscd_use_shm 1

.EE

.SH NSSWITCH DOMAIN

.PP
If you want to allow users to resolve user passwd entries directly from ldap rather then using a sssd server for the system_cronjob_t, you must turn on the authlogin_nsswitch_use_ldap boolean.

.EX
.B setsebool -P authlogin_nsswitch_use_ldap 1
.EE

.PP
If you want to allow confined applications to run with kerberos for the system_cronjob_t, you must turn on the kerberos_enabled boolean.

.EX
.B setsebool -P kerberos_enabled 1
.EE

.SH "MANAGED FILES"

The SELinux process type system_cronjob_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.

.br
.B cron_log_t

	/var/log/rpmpkgs.*
.br

.br
.B cron_spool_t

	/var/spool/fcron
.br
	/var/spool/cron/crontabs
.br

.br
.B cron_var_lib_t

	/var/lib/glpi/files(/.*)?
.br

.br
.B cron_var_run_t


.br
.B cyrus_var_lib_t

	/var/imap(/.*)?
.br
	/var/lib/imap(/.*)?
.br

.br
.B etc_runtime_t

	/[^/]+
.br
	/etc/mtab.*
.br
	/etc/blkid(/.*)?
.br
	/etc/nologin.*
.br
	/etc/\.fstab\.hal\..+
.br
	/halt
.br
	/fastboot
.br
	/poweroff
.br
	/etc/cmtab
.br
	/forcefsck
.br
	/\.autofsck
.br
	/\.suspended
.br
	/fsckoptions
.br
	/\.autorelabel
.br
	/etc/securetty
.br
	/etc/nohotplug
.br
	/etc/killpower
.br
	/etc/ioctl\.save
.br
	/etc/fstab\.REVOKE
.br
	/etc/network/ifstate
.br
	/etc/sysconfig/hwconf
.br
	/etc/ptal/ptal-printd-like
.br
	/etc/sysconfig/iptables\.save
.br
	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
.br
	/etc/X11/xorg\.conf\.d/00-system-setup-keyboard\.conf
.br

.br
.B innd_log_t

	/var/log/news.*
.br

.br
.B innd_var_run_t

	/var/run/innd(/.*)?
.br
	/var/run/news(/.*)?
.br
	/var/run/innd\.pid
.br
	/var/run/news\.pid
.br

.br
.B prelink_log_t

	/var/log/prelink(/.*)?
.br
	/var/log/prelink\.log.*
.br

.br
.B prelink_var_lib_t

	/var/lib/prelink(/.*)?
.br
	/var/lib/misc/prelink.*
.br

.br
.B root_t

	/
.br
	/initrd
.br

.br
.B rpm_log_t

	/var/log/yum\.log.*
.br

.br
.B security_t

	/selinux
.br

.br
.B spamc_home_t

	/root/\.pyzor(/.*)?
.br
	/root/\.spamd(/.*)?
.br
	/root/\.razor(/.*)?
.br
	/root/\.spamassassin(/.*)?
.br
	/home/[^/]*/\.pyzor(/.*)?
.br
	/home/[^/]*/\.spamd(/.*)?
.br
	/home/[^/]*/\.razor(/.*)?
.br
	/home/[^/]*/\.spamassassin(/.*)?
.br
	/home/pwalsh/\.pyzor(/.*)?
.br
	/home/pwalsh/\.spamd(/.*)?
.br
	/home/pwalsh/\.razor(/.*)?
.br
	/home/pwalsh/\.spamassassin(/.*)?
.br
	/home/dwalsh/\.pyzor(/.*)?
.br
	/home/dwalsh/\.spamd(/.*)?
.br
	/home/dwalsh/\.razor(/.*)?
.br
	/home/dwalsh/\.spamassassin(/.*)?
.br
	/var/lib/xguest/home/xguest/\.pyzor(/.*)?
.br
	/var/lib/xguest/home/xguest/\.spamd(/.*)?
.br
	/var/lib/xguest/home/xguest/\.razor(/.*)?
.br
	/var/lib/xguest/home/xguest/\.spamassassin(/.*)?
.br

.br
.B spamd_var_lib_t

	/var/lib/razor(/.*)?
.br
	/var/lib/pyzord(/.*)?
.br
	/var/lib/spamassassin(/.*)?
.br

.br
.B sysstat_log_t

	/var/log/sa(/.*)?
.br
	/opt/sartest(/.*)?
.br
	/var/log/atsar(/.*)?
.br
	/var/log/sysstat(/.*)?
.br

.br
.B system_cron_spool_t

	/etc/cron\.d(/.*)?
.br
	/var/spool/anacron(/.*)?
.br
	/etc/crontab
.br
	/var/spool/fcron/systab
.br
	/var/spool/fcron/new\.systab
.br
	/var/spool/fcron/systab\.orig
.br

.br
.B system_cronjob_lock_t


.br
.B system_cronjob_tmp_t


.br
.B system_cronjob_var_lib_t


.br
.B systemd_passwd_var_run_t

	/var/run/systemd/ask-password(/.*)?
.br
	/var/run/systemd/ask-password-block(/.*)?
.br

.br
.B var_spool_t

	/var/spool(/.*)?
.br

.SH "COMMANDS"
.B semanage fcontext
can also be used to manipulate default file context mappings.
.PP
.B semanage permissive
can also be used to manipulate whether or not a process type is permissive.
.PP
.B semanage module
can also be used to enable/disable/install/remove policy modules.

.B semanage boolean
can also be used to manipulate the booleans

.PP
.B system-config-selinux
is a GUI tool available to customize SELinux policy settings.

.SH AUTHOR
This manual page was auto-generated using
.B "sepolicy manpage"
by Dan Walsh.

.SH "SEE ALSO"
selinux(8), system_cronjob(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
, setsebool(8), system_dbusd_selinux(8), system_mail_selinux(8), system_munin_plugin_selinux(8), systemd_hostnamed_selinux(8), systemd_localed_selinux(8), systemd_logger_selinux(8), systemd_logind_selinux(8), systemd_notify_selinux(8), systemd_passwd_agent_selinux(8), systemd_timedated_selinux(8), systemd_tmpfiles_selinux(8)