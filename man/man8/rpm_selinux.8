.TH  "rpm_selinux"  "8"  "13-01-16" "rpm" "SELinux Policy documentation for rpm"
.SH "NAME"
rpm_selinux \- Security Enhanced Linux Policy for the rpm processes
.SH "DESCRIPTION"

Security-Enhanced Linux secures the rpm processes via flexible mandatory access control.

The rpm processes execute with the rpm_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.

For example:

.B ps -eZ | grep rpm_t


.SH "ENTRYPOINTS"

The rpm_t SELinux type can be entered via the \fBsysctl_type, rpm_exec_t, filesystem_type, debuginfo_exec_t, rpm_script_exec_t, mtrr_device_t, unlabeled_t, proc_type, file_type\fP file types.

The default entrypoint paths for the rpm_t domain are the following:

/usr/libexec/yumDBUSBackend.py, /bin/rpm, /usr/bin/dnf, /usr/bin/rpm, /usr/bin/yum, /usr/bin/zif, /usr/sbin/pup, /usr/bin/smart, /usr/sbin/bcfg2, /usr/sbin/pirut, /usr/bin/apt-get, /usr/sbin/up2date, /usr/sbin/synaptic, /usr/bin/apt-shell, /usr/sbin/rhn_check, /usr/sbin/rhnreg_ks, /usr/sbin/packagekitd, /usr/sbin/yum-updatesd, /usr/libexec/packagekitd, /usr/bin/package-cleanup, /usr/bin/fedora-rmdevelrpms, /usr/bin/rpmdev-rmdevelrpms, /usr/sbin/system-install-packages, /usr/share/yumex/yum_childtask\.py, /usr/sbin/yum-complete-transaction, /usr/share/yumex/yumex-yum-backend, /usr/bin/debuginfo-install, /dev/cpu/mtrr, all files on the system
.SH PROCESS TYPES
SELinux defines process types (domains) for each process running on the system
.PP
You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
.PP
Policy governs the access confined processes have to files.
SELinux rpm policy is very flexible allowing users to setup their rpm processes in as secure a method as possible.
.PP
The following process types are defined for rpm:

.EX
.B rpm_t, rpm_script_t
.EE
.PP
Note:
.B semanage permissive -a rpm_t
can be used to make the process type rpm_t permissive. SELinux does not deny access to permissive process types, but the AVC (SELinux denials) messages are still generated.

.SH BOOLEANS
SELinux policy is customizable based on least access required.  rpm policy is extremely flexible and has several booleans that allow you to manipulate the policy and run rpm with the tightest access possible.


.PP
If you want to allow users to resolve user passwd entries directly from ldap rather then using a sssd server, you must turn on the authlogin_nsswitch_use_ldap boolean. Disabled by default.

.EX
.B setsebool -P authlogin_nsswitch_use_ldap 1

.EE

.PP
If you want to allow all daemons the ability to read/write terminals, you must turn on the daemons_use_tty boolean. Disabled by default.

.EX
.B setsebool -P daemons_use_tty 1

.EE

.PP
If you want to deny user domains applications to map a memory region as both executable and writable, this is dangerous and the executable should be reported in bugzilla, you must turn on the deny_execmem boolean. Enabled by default.

.EX
.B setsebool -P deny_execmem 1

.EE

.PP
If you want to allow sysadm to debug or ptrace all processes, you must turn on the deny_ptrace boolean. Enabled by default.

.EX
.B setsebool -P deny_ptrace 1

.EE

.PP
If you want to allow all domains to use other domains file descriptors, you must turn on the domain_fd_use boolean. Enabled by default.

.EX
.B setsebool -P domain_fd_use 1

.EE

.PP
If you want to allow all domains to have the kernel load modules, you must turn on the domain_kernel_load_modules boolean. Disabled by default.

.EX
.B setsebool -P domain_kernel_load_modules 1

.EE

.PP
If you want to allow all domains to execute in fips_mode, you must turn on the fips_mode boolean. Enabled by default.

.EX
.B setsebool -P fips_mode 1

.EE

.PP
If you want to enable reading of urandom for all domains, you must turn on the global_ssp boolean. Disabled by default.

.EX
.B setsebool -P global_ssp 1

.EE

.PP
If you want to allow confined applications to run with kerberos, you must turn on the kerberos_enabled boolean. Enabled by default.

.EX
.B setsebool -P kerberos_enabled 1

.EE

.PP
If you want to control the ability to mmap a low area of the address space, as configured by /proc/sys/kernel/mmap_min_addr, you must turn on the mmap_low_allowed boolean. Disabled by default.

.EX
.B setsebool -P mmap_low_allowed 1

.EE

.PP
If you want to allow system to run with NIS, you must turn on the nis_enabled boolean. Disabled by default.

.EX
.B setsebool -P nis_enabled 1

.EE

.PP
If you want to allow confined applications to use nscd shared memory, you must turn on the nscd_use_shm boolean. Disabled by default.

.EX
.B setsebool -P nscd_use_shm 1

.EE

.PP
If you want to disable kernel module loading, you must turn on the secure_mode_insmod boolean. Enabled by default.

.EX
.B setsebool -P secure_mode_insmod 1

.EE

.PP
If you want to boolean to determine whether the system permits loading policy, setting enforcing mode, and changing boolean values.  Set this to true and you have to reboot to set it back, you must turn on the secure_mode_policyload boolean. Enabled by default.

.EX
.B setsebool -P secure_mode_policyload 1

.EE

.PP
If you want to allow unconfined executables to make their heap memory executable.  Doing this is a really bad idea. Probably indicates a badly coded executable, but could indicate an attack. This executable should be reported in bugzilla, you must turn on the selinuxuser_execheap boolean. Disabled by default.

.EX
.B setsebool -P selinuxuser_execheap 1

.EE

.PP
If you want to allow all unconfined executables to use libraries requiring text relocation that are not labeled textrel_shlib_t, you must turn on the selinuxuser_execmod boolean. Enabled by default.

.EX
.B setsebool -P selinuxuser_execmod 1

.EE

.PP
If you want to allow unconfined executables to make their stack executable.  This should never, ever be necessary. Probably indicates a badly coded executable, but could indicate an attack. This executable should be reported in bugzilla, you must turn on the selinuxuser_execstack boolean. Enabled by default.

.EX
.B setsebool -P selinuxuser_execstack 1

.EE

.PP
If you want to support X userspace object manager, you must turn on the xserver_object_manager boolean. Enabled by default.

.EX
.B setsebool -P xserver_object_manager 1

.EE

.SH NSSWITCH DOMAIN

.PP
If you want to allow users to resolve user passwd entries directly from ldap rather then using a sssd server for the rpm_script_t, rpm_t, you must turn on the authlogin_nsswitch_use_ldap boolean.

.EX
.B setsebool -P authlogin_nsswitch_use_ldap 1
.EE

.PP
If you want to allow confined applications to run with kerberos for the rpm_script_t, rpm_t, you must turn on the kerberos_enabled boolean.

.EX
.B setsebool -P kerberos_enabled 1
.EE

.SH "MANAGED FILES"

The SELinux process type rpm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.

.br
.B file_type

	all files on the system
.br

.SH FILE CONTEXTS
SELinux requires files to have an extended attribute to define the file type.
.PP
You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
.PP
Policy governs the access confined processes have to these files.
SELinux rpm policy is very flexible allowing users to setup their rpm processes in as secure a method as possible.
.PP

.PP
.B STANDARD FILE CONTEXT

SELinux defines the file context types for the rpm, if you wanted to
store files with these types in a diffent paths, you need to execute the semanage command to sepecify alternate labeling and then use restorecon to put the labels on disk.

.B semanage fcontext -a -t rpm_exec_t '/srv/rpm/content(/.*)?'
.br
.B restorecon -R -v /srv/myrpm_content

Note: SELinux often uses regular expressions to specify labels that match multiple files.

.I The following file types are defined for rpm:


.EX
.PP
.B rpm_exec_t
.EE

- Set files with the rpm_exec_t type, if you want to transition an executable to the rpm_t domain.

.br
.TP 5
Paths:
/usr/libexec/yumDBUSBackend.py, /bin/rpm, /usr/bin/dnf, /usr/bin/rpm, /usr/bin/yum, /usr/bin/zif, /usr/sbin/pup, /usr/bin/smart, /usr/sbin/bcfg2, /usr/sbin/pirut, /usr/bin/apt-get, /usr/sbin/up2date, /usr/sbin/synaptic, /usr/bin/apt-shell, /usr/sbin/rhn_check, /usr/sbin/rhnreg_ks, /usr/sbin/packagekitd, /usr/sbin/yum-updatesd, /usr/libexec/packagekitd, /usr/bin/package-cleanup, /usr/bin/fedora-rmdevelrpms, /usr/bin/rpmdev-rmdevelrpms, /usr/sbin/system-install-packages, /usr/share/yumex/yum_childtask\.py, /usr/sbin/yum-complete-transaction, /usr/share/yumex/yumex-yum-backend

.EX
.PP
.B rpm_file_t
.EE

- Set files with the rpm_file_t type, if you want to treat the files as rpm content.


.EX
.PP
.B rpm_log_t
.EE

- Set files with the rpm_log_t type, if you want to treat the data as rpm log data, usually stored under the /var/log directory.


.EX
.PP
.B rpm_script_exec_t
.EE

- Set files with the rpm_script_exec_t type, if you want to transition an executable to the rpm_script_t domain.


.EX
.PP
.B rpm_script_tmp_t
.EE

- Set files with the rpm_script_tmp_t type, if you want to store rpm script temporary files in the /tmp directories.


.EX
.PP
.B rpm_script_tmpfs_t
.EE

- Set files with the rpm_script_tmpfs_t type, if you want to store rpm script files on a tmpfs file system.


.EX
.PP
.B rpm_tmp_t
.EE

- Set files with the rpm_tmp_t type, if you want to store rpm temporary files in the /tmp directories.


.EX
.PP
.B rpm_tmpfs_t
.EE

- Set files with the rpm_tmpfs_t type, if you want to store rpm files on a tmpfs file system.


.EX
.PP
.B rpm_var_cache_t
.EE

- Set files with the rpm_var_cache_t type, if you want to store the files under the /var/cache directory.

.br
.TP 5
Paths:
/var/cache/yum(/.*)?, /var/spool/up2date(/.*)?, /var/cache/PackageKit(/.*)?

.EX
.PP
.B rpm_var_lib_t
.EE

- Set files with the rpm_var_lib_t type, if you want to store the rpm files under the /var/lib directory.

.br
.TP 5
Paths:
/var/lib/rpm(/.*)?, /var/lib/yum(/.*)?, /var/lib/dnf(/.*)?, /var/lib/PackageKit(/.*)?, /var/lib/alternatives(/.*)?

.EX
.PP
.B rpm_var_run_t
.EE

- Set files with the rpm_var_run_t type, if you want to store the rpm files under the /run or /var/run directory.

.br
.TP 5
Paths:
/var/run/yum.*, /var/run/PackageKit(/.*)?

.PP
Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
.B semanage fcontext
command.  This will modify the SELinux labeling database.  You will need to use
.B restorecon
to apply the labels.

.SH "COMMANDS"
.B semanage fcontext
can also be used to manipulate default file context mappings.
.PP
.B semanage permissive
can also be used to manipulate whether or not a process type is permissive.
.PP
.B semanage module
can also be used to enable/disable/install/remove policy modules.

.B semanage boolean
can also be used to manipulate the booleans

.PP
.B system-config-selinux
is a GUI tool available to customize SELinux policy settings.

.SH AUTHOR
This manual page was auto-generated using
.B "sepolicy manpage"
by Dan Walsh.

.SH "SEE ALSO"
selinux(8), rpm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
, setsebool(8), rpm_script_selinux(8)