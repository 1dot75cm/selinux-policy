.TH  "virtd_selinux"  "8"  "13-01-16" "virtd" "SELinux Policy documentation for virtd"
.SH "NAME"
virtd_selinux \- Security Enhanced Linux Policy for the virtd processes
.SH "DESCRIPTION"

Security-Enhanced Linux secures the virtd processes via flexible mandatory access control.

The virtd processes execute with the virtd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.

For example:

.B ps -eZ | grep virtd_t


.SH "ENTRYPOINTS"

The virtd_t SELinux type can be entered via the \fBvirtd_exec_t\fP file type.

The default entrypoint paths for the virtd_t domain are the following:

/usr/sbin/libvirtd, /usr/bin/imgfac\.py, /usr/bin/imagefactory, /usr/bin/nova-compute, /usr/sbin/condor_vm-gahp, /usr/bin/vios-proxy-host, /usr/bin/vios-proxy-guest
.SH PROCESS TYPES
SELinux defines process types (domains) for each process running on the system
.PP
You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
.PP
Policy governs the access confined processes have to files.
SELinux virtd policy is very flexible allowing users to setup their virtd processes in as secure a method as possible.
.PP
The following process types are defined for virtd:

.EX
.B virtd_lxc_t, virt_qmf_t, virt_qemu_ga_t, virt_bridgehelper_t, virtd_t
.EE
.PP
Note:
.B semanage permissive -a virtd_t
can be used to make the process type virtd_t permissive. SELinux does not deny access to permissive process types, but the AVC (SELinux denials) messages are still generated.

.SH BOOLEANS
SELinux policy is customizable based on least access required.  virtd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run virtd with the tightest access possible.


.PP
If you want to allow users to resolve user passwd entries directly from ldap rather then using a sssd server, you must turn on the authlogin_nsswitch_use_ldap boolean. Disabled by default.

.EX
.B setsebool -P authlogin_nsswitch_use_ldap 1

.EE

.PP
If you want to allow all daemons to write corefiles to /, you must turn on the daemons_dump_core boolean. Disabled by default.

.EX
.B setsebool -P daemons_dump_core 1

.EE

.PP
If you want to allow all daemons to use tcp wrappers, you must turn on the daemons_use_tcp_wrapper boolean. Disabled by default.

.EX
.B setsebool -P daemons_use_tcp_wrapper 1

.EE

.PP
If you want to allow all daemons the ability to read/write terminals, you must turn on the daemons_use_tty boolean. Disabled by default.

.EX
.B setsebool -P daemons_use_tty 1

.EE

.PP
If you want to allow sysadm to debug or ptrace all processes, you must turn on the deny_ptrace boolean. Enabled by default.

.EX
.B setsebool -P deny_ptrace 1

.EE

.PP
If you want to allow all domains to use other domains file descriptors, you must turn on the domain_fd_use boolean. Enabled by default.

.EX
.B setsebool -P domain_fd_use 1

.EE

.PP
If you want to allow all domains to have the kernel load modules, you must turn on the domain_kernel_load_modules boolean. Disabled by default.

.EX
.B setsebool -P domain_kernel_load_modules 1

.EE

.PP
If you want to allow all domains to execute in fips_mode, you must turn on the fips_mode boolean. Enabled by default.

.EX
.B setsebool -P fips_mode 1

.EE

.PP
If you want to enable reading of urandom for all domains, you must turn on the global_ssp boolean. Disabled by default.

.EX
.B setsebool -P global_ssp 1

.EE

.PP
If you want to allow confined applications to run with kerberos, you must turn on the kerberos_enabled boolean. Enabled by default.

.EX
.B setsebool -P kerberos_enabled 1

.EE

.PP
If you want to allow system to run with NIS, you must turn on the nis_enabled boolean. Disabled by default.

.EX
.B setsebool -P nis_enabled 1

.EE

.PP
If you want to allow confined applications to use nscd shared memory, you must turn on the nscd_use_shm boolean. Disabled by default.

.EX
.B setsebool -P nscd_use_shm 1

.EE

.PP
If you want to allow confined virtual guests to manage nfs files, you must turn on the virt_use_nfs boolean. Disabled by default.

.EX
.B setsebool -P virt_use_nfs 1

.EE

.PP
If you want to allow confined virtual guests to manage cifs files, you must turn on the virt_use_samba boolean. Disabled by default.

.EX
.B setsebool -P virt_use_samba 1

.EE

.SH NSSWITCH DOMAIN

.PP
If you want to allow users to resolve user passwd entries directly from ldap rather then using a sssd server for the virtd_t, virtd_lxc_t, you must turn on the authlogin_nsswitch_use_ldap boolean.

.EX
.B setsebool -P authlogin_nsswitch_use_ldap 1
.EE

.PP
If you want to allow confined applications to run with kerberos for the virtd_t, virtd_lxc_t, you must turn on the kerberos_enabled boolean.

.EX
.B setsebool -P kerberos_enabled 1
.EE

.SH PORT TYPES
SELinux defines port types to represent TCP and UDP ports.
.PP
You can see the types associated with a port by using the following command:

.B semanage port -l

.PP
Policy governs the access confined processes have to these ports.
SELinux virtd policy is very flexible allowing users to setup their virtd processes in as secure a method as possible.
.PP
The following port types are defined for virtd:

.EX
.TP 5
.B virt_migration_port_t
.TP 10
.EE


Default Defined Ports:
tcp 49152-49216
.EE

.EX
.TP 5
.B virt_port_t
.TP 10
.EE


Default Defined Ports:
tcp 16509,16514
.EE
udp 16509,16514
.EE

.EX
.TP 5
.B virtual_places_port_t
.TP 10
.EE


Default Defined Ports:
tcp 1533
.EE
udp 1533
.EE
.SH "MANAGED FILES"

The SELinux process type virtd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.

.br
.B anon_inodefs_t


.br
.B cgroup_t

	/cgroup
.br
	/sys/fs/cgroup
.br

.br
.B cifs_t


.br
.B dnsmasq_var_run_t

	/var/run/dnsmasq.*
.br
	/var/run/libvirt/network(/.*)?
.br

.br
.B hugetlbfs_t

	/dev/hugepages
.br
	/lib/udev/devices/hugepages
.br
	/usr/lib/udev/devices/hugepages
.br

.br
.B modules_conf_t

	/etc/modprobe\.d(/.*)?
.br
	/etc/modules\.conf.*
.br
	/etc/modprobe\.conf.*
.br
	/lib/modules/modprobe\.conf
.br
	/usr/lib/modules/modprobe\.conf
.br

.br
.B mtrr_device_t

	/dev/cpu/mtrr
.br

.br
.B nfs_t


.br
.B qemu_var_run_t

	/var/lib/libvirt/qemu(/.*)?
.br
	/var/run/libvirt/qemu(/.*)?
.br

.br
.B root_t

	/
.br
	/initrd
.br

.br
.B security_t

	/selinux
.br

.br
.B sysfs_t

	/sys(/.*)?
.br

.br
.B system_conf_t

	/etc/sysctl\.conf(\.old)?
.br
	/etc/sysconfig/ip6?tables.*
.br
	/etc/sysconfig/ipvsadm.*
.br
	/etc/sysconfig/ebtables.*
.br
	/etc/sysconfig/system-config-firewall.*
.br

.br
.B systemd_passwd_var_run_t

	/var/run/systemd/ask-password(/.*)?
.br
	/var/run/systemd/ask-password-block(/.*)?
.br

.br
.B virt_cache_t

	/var/cache/oz(/.*)?
.br
	/var/cache/libvirt(/.*)?
.br

.br
.B virt_etc_rw_t

	/etc/xen/.*/.*
.br
	/etc/xen/[^/]*
.br
	/etc/libvirt/.*/.*
.br
	/etc/libvirt/[^/]*
.br

.br
.B virt_home_t

	/home/[^/]*/\.libvirt(/.*)?
.br
	/home/[^/]*/\.virtinst(/.*)?
.br
	/home/[^/]*/\.cache/libvirt(/.*)?
.br
	/home/[^/]*/\.config/libvirt(/.*)?
.br
	/home/[^/]*/VirtualMachines(/.*)?
.br
	/home/[^/]*/\.cache/gnome-boxes(/.*)?
.br
	/home/pwalsh/\.libvirt(/.*)?
.br
	/home/pwalsh/\.virtinst(/.*)?
.br
	/home/pwalsh/\.cache/libvirt(/.*)?
.br
	/home/pwalsh/\.config/libvirt(/.*)?
.br
	/home/pwalsh/VirtualMachines(/.*)?
.br
	/home/pwalsh/\.cache/gnome-boxes(/.*)?
.br
	/home/dwalsh/\.libvirt(/.*)?
.br
	/home/dwalsh/\.virtinst(/.*)?
.br
	/home/dwalsh/\.cache/libvirt(/.*)?
.br
	/home/dwalsh/\.config/libvirt(/.*)?
.br
	/home/dwalsh/VirtualMachines(/.*)?
.br
	/home/dwalsh/\.cache/gnome-boxes(/.*)?
.br
	/var/lib/xguest/home/xguest/\.libvirt(/.*)?
.br
	/var/lib/xguest/home/xguest/\.virtinst(/.*)?
.br
	/var/lib/xguest/home/xguest/\.cache/libvirt(/.*)?
.br
	/var/lib/xguest/home/xguest/\.config/libvirt(/.*)?
.br
	/var/lib/xguest/home/xguest/VirtualMachines(/.*)?
.br
	/var/lib/xguest/home/xguest/\.cache/gnome-boxes(/.*)?
.br

.br
.B virt_image_type

	all virtual image files
.br

.br
.B virt_lock_t


.br
.B virt_log_t

	/var/log/log(/.*)?
.br
	/var/log/vdsm(/.*)?
.br
	/var/log/libvirt(/.*)?
.br

.br
.B virt_lxc_var_run_t

	/var/run/libvirt/lxc(/.*)?
.br
	/var/run/libvirt-sandbox(/.*)?
.br

.br
.B virt_tmp_t


.br
.B virt_var_lib_t

	/var/lib/oz(/.*)?
.br
	/var/lib/libvirt(/.*)?
.br

.br
.B virt_var_run_t

	/var/vdsm(/.*)?
.br
	/var/run/vdsm(/.*)?
.br
	/var/run/libvirt(/.*)?
.br
	/var/run/libvirtd\.pid
.br

.SH FILE CONTEXTS
SELinux requires files to have an extended attribute to define the file type.
.PP
You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
.PP
Policy governs the access confined processes have to these files.
SELinux virtd policy is very flexible allowing users to setup their virtd processes in as secure a method as possible.
.PP

.PP
.B STANDARD FILE CONTEXT

SELinux defines the file context types for the virtd, if you wanted to
store files with these types in a diffent paths, you need to execute the semanage command to sepecify alternate labeling and then use restorecon to put the labels on disk.

.B semanage fcontext -a -t virtd_exec_t '/srv/virtd/content(/.*)?'
.br
.B restorecon -R -v /srv/myvirtd_content

Note: SELinux often uses regular expressions to specify labels that match multiple files.

.I The following file types are defined for virtd:


.EX
.PP
.B virtd_exec_t
.EE

- Set files with the virtd_exec_t type, if you want to transition an executable to the virtd_t domain.

.br
.TP 5
Paths:
/usr/sbin/libvirtd, /usr/bin/imgfac\.py, /usr/bin/imagefactory, /usr/bin/nova-compute, /usr/sbin/condor_vm-gahp, /usr/bin/vios-proxy-host, /usr/bin/vios-proxy-guest

.EX
.PP
.B virtd_initrc_exec_t
.EE

- Set files with the virtd_initrc_exec_t type, if you want to transition an executable to the virtd_initrc_t domain.


.EX
.PP
.B virtd_keytab_t
.EE

- Set files with the virtd_keytab_t type, if you want to treat the files as kerberos keytab files.


.EX
.PP
.B virtd_lxc_exec_t
.EE

- Set files with the virtd_lxc_exec_t type, if you want to transition an executable to the virtd_lxc_t domain.


.EX
.PP
.B virtd_unit_file_t
.EE

- Set files with the virtd_unit_file_t type, if you want to treat the files as virtd unit content.

.br
.TP 5
Paths:
/usr/lib/systemd/system/.*xen.*\.service, /usr/lib/systemd/system/virt.*\.service, /usr/lib/systemd/system/libvirt.*\.service

.PP
Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
.B semanage fcontext
command.  This will modify the SELinux labeling database.  You will need to use
.B restorecon
to apply the labels.

.SH "COMMANDS"
.B semanage fcontext
can also be used to manipulate default file context mappings.
.PP
.B semanage permissive
can also be used to manipulate whether or not a process type is permissive.
.PP
.B semanage module
can also be used to enable/disable/install/remove policy modules.

.B semanage port
can also be used to manipulate the port definitions

.B semanage boolean
can also be used to manipulate the booleans

.PP
.B system-config-selinux
is a GUI tool available to customize SELinux policy settings.

.SH AUTHOR
This manual page was auto-generated using
.B "sepolicy manpage"
by Dan Walsh.

.SH "SEE ALSO"
selinux(8), virtd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
, setsebool(8), virt_bridgehelper_selinux(8), virt_qemu_ga_selinux(8), virt_qmf_selinux(8), virtd_lxc_selinux(8)