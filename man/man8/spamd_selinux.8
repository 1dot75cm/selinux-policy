.TH  "spamd_selinux"  "8"  "spamd" "dwalsh@redhat.com" "spamd SELinux Policy documentation"
.SH "NAME"
spamd_selinux \- Security Enhanced Linux Policy for the spamd processes
.SH "DESCRIPTION"

Security-Enhanced Linux secures the spamd processes via flexible mandatory access
control.  

.SH BOOLEANS
SELinux policy is customizable based on least access required.  spamd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run spamd with the tightest access possible.


.PP
If you want to allow user spamassassin clients to use the network, you must turn on the spamassassin_can_network boolean.

.EX
.B setsebool -P spamassassin_can_network 1
.EE

.PP
If you want to allow spamd to read/write user home directories, you must turn on the spamd_enable_home_dirs boolean.

.EX
.B setsebool -P spamd_enable_home_dirs 1
.EE

.PP
If you want to allow http daemon to check spam, you must turn on the httpd_can_check_spam boolean.

.EX
.B setsebool -P httpd_can_check_spam 1
.EE

.SH NSSWITCH DOMAIN

.PP
If you want to allow users to resolve user passwd entries directly from ldap rather then using a sssd serve for the spamc_t, spamd_update_t, spamd_t, spamass_milter_t, you must turn on the authlogin_nsswitch_use_ldap boolean.

.EX
.B setsebool -P authlogin_nsswitch_use_ldap 1
.EE

.PP
If you want to allow confined applications to run with kerberos for the spamc_t, spamd_update_t, spamd_t, spamass_milter_t, you must turn on the kerberos_enabled boolean.

.EX
.B setsebool -P kerberos_enabled 1
.EE

.SH FILE CONTEXTS
SELinux requires files to have an extended attribute to define the file type. 
.PP
You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
.PP
Policy governs the access confined processes have to these files. 
SELinux spamd policy is very flexible allowing users to setup their spamd processes in as secure a method as possible.
.PP 
The following file types are defined for spamd:


.EX
.PP
.B spamd_compiled_t 
.EE

- Set files with the spamd_compiled_t type, if you want to treat the files as spamd compiled data.


.EX
.PP
.B spamd_etc_t 
.EE

- Set files with the spamd_etc_t type, if you want to store spamd files in the /etc directories.

.br
.TP 5
Paths: 
/etc/pyzor(/.*)?, /etc/razor(/.*)?

.EX
.PP
.B spamd_exec_t 
.EE

- Set files with the spamd_exec_t type, if you want to transition an executable to the spamd_t domain.

.br
.TP 5
Paths: 
/usr/sbin/spampd, /usr/sbin/spamd, /usr/bin/mimedefang-multiplexor, /usr/bin/pyzord, /usr/bin/spamd, /usr/bin/mimedefang

.EX
.PP
.B spamd_initrc_exec_t 
.EE

- Set files with the spamd_initrc_exec_t type, if you want to transition an executable to the spamd_initrc_t domain.

.br
.TP 5
Paths: 
/etc/rc\.d/init\.d/spampd, /etc/rc\.d/init\.d/spamd, /etc/rc\.d/init\.d/mimedefang.*, /etc/rc\.d/init\.d/pyzord

.EX
.PP
.B spamd_log_t 
.EE

- Set files with the spamd_log_t type, if you want to treat the data as spamd log data, usually stored under the /var/log directory.

.br
.TP 5
Paths: 
/var/log/razor-agent\.log.*, /var/log/mimedefang, /var/log/pyzord\.log.*, /var/log/spamd\.log.*

.EX
.PP
.B spamd_spool_t 
.EE

- Set files with the spamd_spool_t type, if you want to store the spamd files under the /var/spool directory.

.br
.TP 5
Paths: 
/var/spool/spamd(/.*)?, /var/spool/spamassassin(/.*)?, /var/spool/spampd(/.*)?

.EX
.PP
.B spamd_tmp_t 
.EE

- Set files with the spamd_tmp_t type, if you want to store spamd temporary files in the /tmp directories.


.EX
.PP
.B spamd_update_exec_t 
.EE

- Set files with the spamd_update_exec_t type, if you want to transition an executable to the spamd_update_t domain.


.EX
.PP
.B spamd_var_lib_t 
.EE

- Set files with the spamd_var_lib_t type, if you want to store the spamd files under the /var/lib directory.

.br
.TP 5
Paths: 
/var/lib/spamassassin(/.*)?, /var/lib/razor(/.*)?, /var/lib/pyzord(/.*)?

.EX
.PP
.B spamd_var_run_t 
.EE

- Set files with the spamd_var_run_t type, if you want to store the spamd files under the /run directory.

.br
.TP 5
Paths: 
/var/run/spamassassin(/.*)?, /var/spool/MIMEDefang(/.*)?, /var/spool/MD-Quarantine(/.*)?

.PP
Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the 
.B semanage fcontext 
command.  This will modify the SELinux labeling database.  You will need to use
.B restorecon
to apply the labels.

.SH PORT TYPES
SELinux defines port types to represent TCP and UDP ports. 
.PP
You can see the types associated with a port by using the following command: 

.B semanage port -l

.PP
Policy governs the access confined processes have to these ports. 
SELinux spamd policy is very flexible allowing users to setup their spamd processes in as secure a method as possible.
.PP 
The following port types are defined for spamd:

.EX
.TP 5
.B spamd_port_t 
.TP 10
.EE


Default Defined Ports:
tcp 783,10026,10027
.EE
.SH PROCESS TYPES
SELinux defines process types (domains) for each process running on the system
.PP
You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
.PP
Policy governs the access confined processes have to files. 
SELinux spamd policy is very flexible allowing users to setup their spamd processes in as secure a method as possible.
.PP 
The following process types are defined for spamd:

.EX
.B spamc_t, spamd_t, spamd_update_t, spamass_milter_t 
.EE
.PP
Note: 
.B semanage permissive -a PROCESS_TYPE 
can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.

.SH "MANAGED FILES"

The SELinux user type spamd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.

.br
.B amavis_var_lib_t

	/var/amavis(/.*)?
.br
	/var/lib/amavis(/.*)?
.br
	/var/opt/f-secure(/.*)?
.br

.br
.B exim_spool_t

	/var/spool/exim[0-9]?(/.*)?
.br

.br
.B spamass_milter_state_t

	/var/lib/spamass-milter(/.*)?
.br

.br
.B spamc_home_t

	/root/\.pyzor(/.*)?
.br
	/root/\.spamd(/.*)?
.br
	/root/\.razor(/.*)?
.br
	/root/\.spamassassin(/.*)?
.br
	/home/[^/]*/\.pyzor(/.*)?
.br
	/home/[^/]*/\.spamd(/.*)?
.br
	/home/[^/]*/\.razor(/.*)?
.br
	/home/[^/]*/\.spamassassin(/.*)?
.br

.br
.B spamd_compiled_t

	/var/lib/spamassassin/compiled(/.*)?
.br

.br
.B spamd_log_t

	/var/log/spamd\.log.*
.br
	/var/log/pyzord\.log.*
.br
	/var/log/razor-agent\.log.*
.br
	/var/log/mimedefang
.br

.br
.B spamd_spool_t

	/var/spool/spamd(/.*)?
.br
	/var/spool/spampd(/.*)?
.br
	/var/spool/spamassassin(/.*)?
.br

.br
.B spamd_tmp_t


.br
.B spamd_var_lib_t

	/var/lib/razor(/.*)?
.br
	/var/lib/pyzord(/.*)?
.br
	/var/lib/spamassassin(/.*)?
.br

.br
.B spamd_var_run_t

	/var/run/spamassassin(/.*)?
.br
	/var/spool/MIMEDefang(/.*)?
.br
	/var/spool/MD-Quarantine(/.*)?
.br

.SH "COMMANDS"
.B semanage fcontext
can also be used to manipulate default file context mappings.
.PP
.B semanage permissive
can also be used to manipulate whether or not a process type is permissive.
.PP
.B semanage module
can also be used to enable/disable/install/remove policy modules.

.B semanage port
can also be used to manipulate the port definitions

.B semanage boolean
can also be used to manipulate the booleans

.PP
.B system-config-selinux 
is a GUI tool available to customize SELinux policy settings.

.SH AUTHOR	
This manual page was auto-generated by genman.py.

.SH "SEE ALSO"
selinux(8), spamd(8), semanage(8), restorecon(8), chcon(1)
, setsebool(8), spamass_milter_selinux(8), spamc_selinux(8), spamd_update_selinux(8)