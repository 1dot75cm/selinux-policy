.TH  "sshd_selinux"  "8"  "sshd" "dwalsh@redhat.com" "sshd SELinux Policy documentation"
.SH "NAME"
sshd_selinux \- Security Enhanced Linux Policy for the sshd processes
.SH "DESCRIPTION"

Security-Enhanced Linux secures the sshd processes via flexible mandatory access control.

The sshd processes execute with the sshd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier. 

For example:

.B ps -eZ | grep sshd_t


.SH "ENTRYPOINTS"

The sshd_t SELinux type can be entered via the "sshd_exec_t" file type.  The default entrypoint paths for the sshd_t domain are the following:"

/usr/sbin/sshd
.SH PROCESS TYPES
SELinux defines process types (domains) for each process running on the system
.PP
You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
.PP
Policy governs the access confined processes have to files. 
SELinux sshd policy is very flexible allowing users to setup their sshd processes in as secure a method as possible.
.PP 
The following process types are defined for sshd:

.EX
.B sshd_sandbox_t, ssh_keysign_t, ssh_keygen_t, ssh_t, sshd_t 
.EE
.PP
Note: 
.B semanage permissive -a PROCESS_TYPE 
can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.

.SH BOOLEANS
SELinux policy is customizable based on least access required.  sshd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sshd with the tightest access possible.


.PP
If you want to allow ssh with chroot env to read and write files in the user home directories, you must turn on the ssh_chroot_rw_homedirs boolean.

.EX
.B setsebool -P ssh_chroot_rw_homedirs 1
.EE

.PP
If you want to allow internal-sftp to read and write files in the user ssh home directories, you must turn on the sftpd_write_ssh_home boolean.

.EX
.B setsebool -P sftpd_write_ssh_home 1
.EE

.PP
If you want to allow ssh logins as sysadm_r:sysadm_t, you must turn on the ssh_sysadm_login boolean.

.EX
.B setsebool -P ssh_sysadm_login 1
.EE

.PP
If you want to allow host key based authentication, you must turn on the ssh_keysign boolean.

.EX
.B setsebool -P ssh_keysign 1
.EE

.PP
If you want to allow fenced domain to execute ssh, you must turn on the fenced_can_ssh boolean.

.EX
.B setsebool -P fenced_can_ssh 1
.EE

.SH FILE CONTEXTS
SELinux requires files to have an extended attribute to define the file type. 
.PP
You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
.PP
Policy governs the access confined processes have to these files. 
SELinux sshd policy is very flexible allowing users to setup their sshd processes in as secure a method as possible.
.PP 
The following file types are defined for sshd:


.EX
.PP
.B sshd_exec_t 
.EE

- Set files with the sshd_exec_t type, if you want to transition an executable to the sshd_t domain.


.EX
.PP
.B sshd_initrc_exec_t 
.EE

- Set files with the sshd_initrc_exec_t type, if you want to transition an executable to the sshd_initrc_t domain.


.EX
.PP
.B sshd_key_t 
.EE

- Set files with the sshd_key_t type, if you want to treat the files as sshd key data.

.br
.TP 5
Paths: 
/etc/ssh/ssh_host_rsa_key, /etc/ssh/ssh_host_rsa_key.pub, /etc/ssh/ssh_host_dsa_key.pub, /etc/ssh/ssh_host_key, /etc/ssh/ssh_host_key.pub, /etc/ssh/ssh_host_dsa_key, /etc/ssh/primes

.EX
.PP
.B sshd_keytab_t 
.EE

- Set files with the sshd_keytab_t type, if you want to treat the files as kerberos keytab files.


.EX
.PP
.B sshd_tmpfs_t 
.EE

- Set files with the sshd_tmpfs_t type, if you want to store sshd files on a tmpfs file system.


.EX
.PP
.B sshd_var_run_t 
.EE

- Set files with the sshd_var_run_t type, if you want to store the sshd files under the /run directory.

.br
.TP 5
Paths: 
/var/run/sshd\.pid, /var/run/sshd\.init\.pid

.PP
Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the 
.B semanage fcontext 
command.  This will modify the SELinux labeling database.  You will need to use
.B restorecon
to apply the labels.

.SH PORT TYPES
SELinux defines port types to represent TCP and UDP ports. 
.PP
You can see the types associated with a port by using the following command: 

.B semanage port -l

.PP
Policy governs the access confined processes have to these ports. 
SELinux sshd policy is very flexible allowing users to setup their sshd processes in as secure a method as possible.
.PP 
The following port types are defined for sshd:

.EX
.TP 5
.B ssh_port_t 
.TP 10
.EE


Default Defined Ports:
tcp 22
.EE
.SH "MANAGED FILES"

The SELinux process type sshd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.

.br
.B auth_cache_t

	/var/cache/coolkey(/.*)?
.br

.br
.B auth_home_t

	/root/\.google_authenticator
.br
	/root/\.google_authenticator~
.br
	/home/[^/]*/\.google_authenticator
.br
	/home/[^/]*/\.google_authenticator~
.br
	/home/dwalsh/\.google_authenticator
.br
	/home/dwalsh/\.google_authenticator~
.br
	/var/lib/xguest/home/xguest/\.google_authenticator
.br
	/var/lib/xguest/home/xguest/\.google_authenticator~
.br

.br
.B cgroup_t

	/cgroup
.br
	/sys/fs/cgroup
.br

.br
.B condor_var_lib_t

	/var/lib/condor(/.*)?
.br
	/var/lib/condor/spool(/.*)?
.br
	/var/lib/condor/execute(/.*)?
.br

.br
.B faillog_t

	/var/log/btmp.*
.br
	/var/run/faillock(/.*)?
.br
	/var/log/faillog
.br
	/var/log/tallylog
.br

.br
.B gitosis_var_lib_t

	/var/lib/gitosis(/.*)?
.br
	/var/lib/gitolite(3)?(/.*)?
.br

.br
.B initrc_var_run_t

	/var/run/utmp
.br
	/var/run/random-seed
.br
	/var/run/runlevel\.dir
.br
	/var/run/setmixer_flag
.br

.br
.B krb5_host_rcache_t

	/var/cache/krb5rcache(/.*)?
.br
	/var/tmp/nfs_0
.br
	/var/tmp/host_0
.br
	/var/tmp/imap_0
.br
	/var/tmp/HTTP_23
.br
	/var/tmp/HTTP_48
.br
	/var/tmp/ldap_55
.br
	/var/tmp/ldap_487
.br
	/var/tmp/ldapmap1_0
.br

.br
.B lastlog_t

	/var/log/lastlog
.br

.br
.B openshift_tmp_t

	/var/lib/stickshift/.*/\.tmp(/.*)?
.br
	/var/lib/stickshift/.*/\.sandbox(/.*)?
.br

.br
.B pam_var_run_t

	/var/(db|lib|adm)/sudo(/.*)?
.br
	/var/run/sudo(/.*)?
.br
	/var/run/sepermit(/.*)?
.br
	/var/run/pam_mount(/.*)?
.br

.br
.B pcscd_var_run_t

	/var/run/pcscd(/.*)?
.br
	/var/run/pcscd\.events(/.*)?
.br
	/var/run/pcscd\.pid
.br
	/var/run/pcscd\.pub
.br
	/var/run/pcscd\.comm
.br

.br
.B security_t

	/selinux
.br

.br
.B ssh_home_t

	/root/\.ssh(/.*)?
.br
	/var/lib/amanda/\.ssh(/.*)?
.br
	/var/lib/stickshift/[^/]+/\.ssh(/.*)?
.br
	/var/lib/gitolite/\.ssh(/.*)?
.br
	/var/lib/nocpulse/\.ssh(/.*)?
.br
	/var/lib/gitolite3/\.ssh(/.*)?
.br
	/root/\.shosts
.br
	/home/[^/]*/\.ssh(/.*)?
.br
	/home/[^/]*/\.shosts
.br
	/home/dwalsh/\.ssh(/.*)?
.br
	/home/dwalsh/\.shosts
.br
	/var/lib/xguest/home/xguest/\.ssh(/.*)?
.br
	/var/lib/xguest/home/xguest/\.shosts
.br

.br
.B sshd_tmpfs_t


.br
.B sshd_var_run_t

	/var/run/sshd\.pid
.br
	/var/run/sshd\.init\.pid
.br

.br
.B systemd_passwd_var_run_t

	/var/run/systemd/ask-password(/.*)?
.br
	/var/run/systemd/ask-password-block(/.*)?
.br

.br
.B user_tmp_t

	/var/run/user(/.*)?
.br
	/tmp/gconfd-.*
.br
	/tmp/gconfd-dwalsh
.br
	/tmp/gconfd-xguest
.br

.br
.B user_tmp_type

	all user tmp files
.br

.br
.B var_auth_t

	/var/ace(/.*)?
.br
	/var/rsa(/.*)?
.br
	/var/lib/abl(/.*)?
.br
	/var/lib/rsa(/.*)?
.br
	/var/lib/pam_ssh(/.*)?
.br
	/var/run/pam_ssh(/.*)?
.br
	/var/lib/pam_shield(/.*)?
.br
	/var/lib/google-authenticator(/.*)?
.br

.br
.B wtmp_t

	/var/log/wtmp.*
.br

.SH NSSWITCH DOMAIN

.PP
If you want to allow users to resolve user passwd entries directly from ldap rather then using a sssd serve for the ssh_keygen_t, sshd_t, ssh_t, you must turn on the authlogin_nsswitch_use_ldap boolean.

.EX
.B setsebool -P authlogin_nsswitch_use_ldap 1
.EE

.PP
If you want to allow confined applications to run with kerberos for the ssh_keygen_t, sshd_t, ssh_t, you must turn on the kerberos_enabled boolean.

.EX
.B setsebool -P kerberos_enabled 1
.EE

.SH "COMMANDS"
.B semanage fcontext
can also be used to manipulate default file context mappings.
.PP
.B semanage permissive
can also be used to manipulate whether or not a process type is permissive.
.PP
.B semanage module
can also be used to enable/disable/install/remove policy modules.

.B semanage port
can also be used to manipulate the port definitions

.B semanage boolean
can also be used to manipulate the booleans

.PP
.B system-config-selinux 
is a GUI tool available to customize SELinux policy settings.

.SH AUTHOR	
This manual page was auto-generated by genman.py.

.SH "SEE ALSO"
selinux(8), sshd(8), semanage(8), restorecon(8), chcon(1)
, setsebool(8), ssh_selinux(8), ssh_selinux(8), ssh_keygen_selinux(8), ssh_keysign_selinux(8)