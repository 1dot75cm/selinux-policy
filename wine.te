<<<<<<< HEAD
policy_module(wine, 1.8.1)
=======
policy_module(wine, 1.10.0)
>>>>>>> 9f8a6a356b99a19e09256fc37630cd6c22da66b4

########################################
#
# Declarations
#

## <desc>
## <p>
##	Ignore wine mmap_zero errors.
## </p>
## </desc>
gen_tunable(wine_mmap_zero_ignore, false)

type wine_t;
type wine_exec_t;
<<<<<<< HEAD
application_domain(wine_t, wine_exec_t)
ubac_constrained(wine_t)
role system_r types wine_t;

type wine_tmp_t;
files_tmp_file(wine_tmp_t)
ubac_constrained(wine_tmp_t)
=======
userdom_user_application_domain(wine_t, wine_exec_t)
role system_r types wine_t;

type wine_tmp_t;
userdom_user_tmp_file(wine_tmp_t)
>>>>>>> 9f8a6a356b99a19e09256fc37630cd6c22da66b4

########################################
#
# Local policy
#

allow wine_t self:process { execstack execmem execheap };
allow wine_t self:fifo_file manage_fifo_file_perms;

can_exec(wine_t, wine_exec_t)

manage_dirs_pattern(wine_t, wine_tmp_t, wine_tmp_t)
manage_files_pattern(wine_t, wine_tmp_t, wine_tmp_t)
files_tmp_filetrans(wine_t, wine_tmp_t, { file dir })

domain_mmap_low(wine_t)

files_execmod_all_files(wine_t)

<<<<<<< HEAD
userdom_use_inherited_user_terminals(wine_t)
=======
userdom_use_user_terminals(wine_t)
>>>>>>> 9f8a6a356b99a19e09256fc37630cd6c22da66b4

tunable_policy(`wine_mmap_zero_ignore',`
	dontaudit wine_t self:memprotect mmap_zero;
')

optional_policy(`
	hal_dbus_chat(wine_t)
')

optional_policy(`
	policykit_dbus_chat(wine_t)
')

optional_policy(`
<<<<<<< HEAD
	rtkit_scheduled(wine_t)
')

optional_policy(`
=======
>>>>>>> 9f8a6a356b99a19e09256fc37630cd6c22da66b4
	unconfined_domain(wine_t)
')

optional_policy(`
	xserver_read_xdm_pid(wine_t)
	xserver_rw_shm(wine_t)
')
