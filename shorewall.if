## <summary>Shoreline Firewall high-level tool for configuring netfilter.</summary>

########################################
## <summary>
##	Execute a domain transition to run shorewall.
## </summary>
## <param name="domain">
## <summary>
##	Domain allowed to transition.
## </summary>
## </param>
#
interface(`shorewall_domtrans',`
	gen_require(`
		type shorewall_t, shorewall_exec_t;
	')

	corecmd_search_bin($1)
	domtrans_pattern($1, shorewall_exec_t, shorewall_t)
')

######################################
## <summary>
##	Execute a domain transition to run shorewall.
## </summary>
## <param name="domain">
## <summary>
##	Domain allowed to transition.
## </summary>
## </param>
#
interface(`shorewall_lib_domtrans',`
	gen_require(`
		type shorewall_t, shorewall_var_lib_t;
	')

	files_search_var_lib($1)
	domtrans_pattern($1, shorewall_var_lib_t, shorewall_t)
')

#######################################
## <summary>
##	Read shorewall configuration files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`shorewall_read_config',`
	gen_require(`
		type shorewall_etc_t;
	')

	files_search_etc($1)
	read_files_pattern($1, shorewall_etc_t, shorewall_etc_t)
')

<<<<<<< HEAD
######################################
## <summary>
##      Read shorewall /var/lib files.
=======
#######################################
## <summary>
##	Read shorewall pid files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`shorewall_read_pid_files',`
	gen_require(`
		type shorewall_var_run_t;
	')

	files_search_pids($1)
	read_files_pattern($1, shorewall_var_run_t, shorewall_var_run_t)
')

#######################################
## <summary>
##	Read and write shorewall pid files.
>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
<<<<<<< HEAD
interface(`shorewall_read_lib_files',`
        gen_require(`
		type shorewall_var_lib_t;
       ')
=======
interface(`shorewall_rw_pid_files',`
	gen_require(`
		type shorewall_var_run_t;
	')

	files_search_pids($1)
	rw_files_pattern($1, shorewall_var_run_t, shorewall_var_run_t)
')

######################################
## <summary>
##	Read shorewall lib files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`shorewall_read_lib_files',`
	gen_require(`
		type shorewall_var_lib_t;
	')
>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a

	files_search_var_lib($1)
	read_files_pattern($1, shorewall_var_lib_t, shorewall_var_lib_t)
')

#######################################
## <summary>
##	Read and write shorewall lib files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`shorewall_rw_lib_files',`
	gen_require(`
		type shorewall_var_lib_t;
	')

	files_search_var_lib($1)
	rw_files_pattern($1, shorewall_var_lib_t, shorewall_var_lib_t)
')

#######################################
## <summary>
##	Read shorewall temporary files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`shorewall_read_tmp_files',`
	gen_require(`
		type shorewall_tmp_t;
	')

	files_search_tmp($1)
	read_files_pattern($1, shorewall_tmp_t, shorewall_tmp_t)
')

#######################################
## <summary>
##	All of the rules required to
##	administrate an shorewall environment.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	Role allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`shorewall_admin',`
	gen_require(`
		type shorewall_t, shorewall_lock_t, shorewall_log_t;
		type shorewall_exec_t, shorewall_initrc_exec_t, shorewall_var_lib_t;
		type shorewall_tmp_t, shorewall_etc_t;
	')

	allow $1 shorewall_t:process signal_perms;
	ps_process_pattern($1, shorewall_t)
	tunable_policy(`deny_ptrace',`',`
		allow $1 shorewall_t:process ptrace;
	')

	init_labeled_script_domtrans($1, shorewall_initrc_exec_t)
	domain_system_change_exemption($1)
	role_transition $2 shorewall_initrc_exec_t system_r;
	allow $2 system_r;

	can_exec($1, shorewall_exec_t)

	files_list_etc($1)
	admin_pattern($1, shorewall_etc_t)

	files_list_locks($1)
	admin_pattern($1, shorewall_lock_t)

	logging_list_logs($1)
	admin_pattern($1, shorewall_log_t)

	files_list_var_lib($1)
	admin_pattern($1, shorewall_var_lib_t)

	files_list_tmp($1)
	admin_pattern($1, shorewall_tmp_t)
')
