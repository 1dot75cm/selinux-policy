## <summary>Check and feed random data from hardware device to kernel random device.</summary>

########################################
## <summary>
<<<<<<< HEAD
##	Execute rngd in the rngd domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`rng_systemctl_rngd',`
	gen_require(`
		type rngd_t, rngd_unit_file_t;
	')

	systemd_exec_systemctl($1)
	allow $1 rngd_unit_file_t:file read_file_perms;
	allow $1 rngd_unit_file_t:service manage_service_perms;

	ps_process_pattern($1, rngd_t)
')

########################################
## <summary>
=======
>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a
##	All of the rules required to
##	administrate an rng environment.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	Role allowed access.
##	</summary>
## </param>
## <rolecap/>
#
<<<<<<< HEAD
interface(`rng_admin',`
	gen_require(`
		type rngd_t, rngd_initrc_exec_t, rngd_unit_file_t;
	')

	allow $1 rngd_t:process signal_perms;
	ps_process_pattern($1, rngd_t)

	tunable_policy(`deny_ptrace',`',`
		allow $1 rngd_t:process ptrace;
	')

=======
interface(`rngd_admin',`
	gen_require(`
		type rngd_t, rngd_initrc_exec_t;
	')

	allow $1 rngd_t:process { ptrace signal_perms };
	ps_process_pattern($1, rngd_t)

>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a
	init_labeled_script_domtrans($1, rngd_initrc_exec_t)
	domain_system_change_exemption($1)
	role_transition $2 rngd_initrc_exec_t system_r;
	allow $2 system_r;
<<<<<<< HEAD

	rng_systemctl($1)
	admin_pattern($1, rngd_unit_file_t)
	allow $1 rngd_unit_file_t:service all_service_perms;
=======
>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a
')
