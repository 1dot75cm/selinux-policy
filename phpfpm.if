
## <summary> PHP-FPM (FastCGI Process Manager) is an alternative PHP FastCGI implementation with some additional features useful for sites of any size, especially busier sites. </summary>

########################################
## <summary>
##	Execute php-fpm in the phpfpm domain.
## </summary>
## <param name="domain">
## <summary>
##	Domain allowed to transition.
## </summary>
## </param>
#
interface(`phpfpm_domtrans',`
	gen_require(`
		type phpfpm_t, phpfpm_exec_t;
	')

	corecmd_search_bin($1)
	domtrans_pattern($1, phpfpm_exec_t, phpfpm_t)
')

########################################
## <summary>
##	Read phpfpm's log files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`phpfpm_read_log',`
	gen_require(`
		type phpfpm_log_t;
	')

	logging_search_logs($1)
	read_files_pattern($1, phpfpm_log_t, phpfpm_log_t)
')

########################################
## <summary>
##	Append to phpfpm log files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`phpfpm_append_log',`
	gen_require(`
		type phpfpm_log_t;
	')

	logging_search_logs($1)
	append_files_pattern($1, phpfpm_log_t, phpfpm_log_t)
')

########################################
## <summary>
##	Manage phpfpm log files
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`phpfpm_manage_log',`
	gen_require(`
		type phpfpm_log_t;
	')

	logging_search_logs($1)
	manage_dirs_pattern($1, phpfpm_log_t, phpfpm_log_t)
	manage_files_pattern($1, phpfpm_log_t, phpfpm_log_t)
	manage_lnk_files_pattern($1, phpfpm_log_t, phpfpm_log_t)
')

########################################
## <summary>
##	Read phpfpm PID files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`phpfpm_read_pid_files',`
	gen_require(`
		type phpfpm_var_run_t;
	')

	files_search_pids($1)
	allow $1 phpfpm_var_run_t:file read_file_perms;
')

########################################
## <summary>
##	Execute phpfpm server in the phpfpm domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`phpfpm_systemctl',`
	gen_require(`
		type phpfpm_t;
		type phpfpm_unit_file_t;
	')

	systemd_exec_systemctl($1)
	allow $1 phpfpm_unit_file_t:file read_file_perms;
	allow $1 phpfpm_unit_file_t:service manage_service_perms;

	ps_process_pattern($1, phpfpm_t)
')


########################################
## <summary>
##	All of the rules required to administrate
##	an phpfpm environment
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`phpfpm_admin',`
	gen_require(`
		type phpfpm_t;
		type phpfpm_log_t;
		type phpfpm_var_run_t;
		type phpfpm_unit_file_t;
	')

	allow $1 phpfpm_t:process { ptrace signal_perms };
	ps_process_pattern($1, phpfpm_t)

	logging_search_logs($1)
	admin_pattern($1, phpfpm_log_t)

	files_search_pids($1)
	admin_pattern($1, phpfpm_var_run_t)

	phpfpm_systemctl($1)
	admin_pattern($1, phpfpm_unit_file_t)
	allow $1 phpfpm_unit_file_t:service all_service_perms;

	optional_policy(`
		systemd_passwd_agent_exec($1)
		systemd_read_fifo_file_passwd_run($1)
	')
')
