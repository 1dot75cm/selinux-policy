## <summary>GIT revision control system.</summary>

########################################
## <summary>
##	Role access for Git session.
## </summary>
## <param name="role">
##	<summary>
##	Role allowed access.
##	</summary>
## </param>
## <param name="domain">
##	<summary>
##	User domain for the role.
##	</summary>
## </param>
#
template(`git_session_role',`
	gen_require(`
<<<<<<< HEAD
		type git_session_t, gitd_exec_t;
=======
		attribute_role git_session_roles;
		type git_session_t, gitd_exec_t, git_user_content_t;
>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a
	')

	########################################
	#
	# Declarations
	#

	roleattribute $1 git_session_roles;

	########################################
	#
	# Policy
	#

<<<<<<< HEAD
	allow $2 git_session_t:process signal_perms;
=======
	allow $2 git_user_content_t:dir { manage_dir_perms relabel_dir_perms };
	allow $2 git_user_content_t:file { exec_file_perms manage_file_perms relabel_file_perms };
	userdom_user_home_dir_filetrans($2, git_user_content_t, dir, "public_git")

	allow $2 git_session_t:process { ptrace signal_perms };
>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a
	ps_process_pattern($2, git_session_t)

	tunable_policy(`deny_ptrace',`',`
		allow $2 git_session_t:process ptrace;
	')

	tunable_policy(`git_session_users',`
		domtrans_pattern($2, gitd_exec_t, git_session_t)
	',`
		can_exec($2, gitd_exec_t)
	')
')

########################################
## <summary>
<<<<<<< HEAD
##	Create a set of derived types for Git
##	daemon shared repository content.
## </summary>
## <param name="prefix">
##	<summary>
##	The prefix to be used for deriving type names.
##	</summary>
## </param>
#
template(`git_content_template',`
	gen_require(`
		attribute git_system_content, git_content;
	')

	########################################
	#
	# Git daemon content shared declarations.
	#

	type git_$1_content_t, git_system_content, git_content;
	files_type(git_$1_content_t)
')

########################################
## <summary>
##	Create a set of derived types for Git
##	daemon shared repository roles.
## </summary>
## <param name="prefix">
##	<summary>
##	The prefix to be used for deriving type names.
##	</summary>
## </param>
#
template(`git_role_template',`
	gen_require(`
		class context contains;
		role system_r;
	')

	########################################
	#
	# Git daemon role shared declarations.
	#

	attribute $1_usertype;

	type $1_t;
	userdom_unpriv_usertype($1, $1_t)
	domain_type($1_t)

	role $1_r types $1_t;
	allow system_r $1_r;

	########################################
	#
	# Git daemon role shared policy.
	#

	allow $1_t self:context contains;
	allow $1_t self:fifo_file rw_fifo_file_perms;

	corecmd_exec_bin($1_t)
	corecmd_bin_entry_type($1_t)
	corecmd_shell_entry_type($1_t)

	domain_interactive_fd($1_t)
	domain_user_exemption_target($1_t)

	kernel_read_system_state($1_t)

	files_read_etc_files($1_t)
	files_dontaudit_search_home($1_t)


	git_rwx_generic_system_content($1_t)

	ssh_rw_stream_sockets($1_t)

	tunable_policy(`git_system_use_cifs',`
		fs_exec_cifs_files($1_t)
		fs_manage_cifs_dirs($1_t)
		fs_manage_cifs_files($1_t)
	')

	tunable_policy(`git_system_use_nfs',`
		fs_exec_nfs_files($1_t)
		fs_manage_nfs_dirs($1_t)
		fs_manage_nfs_files($1_t)
	')

	optional_policy(`
		nscd_read_pid($1_t)
	')
')

#######################################
## <summary>
##	Allow specified domain access to the
##	specified Git daemon content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="object">
##	<summary>
##	Type of the object that access is allowed to.
##	</summary>
## </param>
#
interface(`git_content_delegation',`
	gen_require(`
		type $1, $2;
	')

	exec_files_pattern($1, $2, $2)
	manage_dirs_pattern($1, $2, $2)
	manage_files_pattern($1, $2, $2)
	files_search_var_lib($1)

	tunable_policy(`git_system_use_cifs',`
		fs_exec_cifs_files($1)
		fs_manage_cifs_dirs($1)
		fs_manage_cifs_files($1)
	')

	tunable_policy(`git_system_use_nfs',`
		fs_exec_nfs_files($1)
		fs_manage_nfs_dirs($1)
		fs_manage_nfs_files($1)
	')
')

########################################
## <summary>
##	Allow the specified domain to manage
##	and execute all Git daemon content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`git_rwx_all_content',`
	gen_require(`
		attribute git_content;
	')

	exec_files_pattern($1, git_content, git_content)
	manage_dirs_pattern($1, git_content, git_content)
	manage_files_pattern($1, git_content, git_content)
	userdom_search_user_home_dirs($1)
	files_search_var_lib($1)

	tunable_policy(`git_system_use_cifs',`
		fs_exec_cifs_files($1)
		fs_manage_cifs_dirs($1)
		fs_manage_cifs_files($1)
	')

	tunable_policy(`git_system_use_nfs',`
		fs_exec_nfs_files($1)
		fs_manage_nfs_dirs($1)
		fs_manage_nfs_files($1)
	')
')

########################################
## <summary>
##	Allow the specified domain to manage
##	and execute all Git daemon system content.
=======
##	Read generic system content files.
>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
<<<<<<< HEAD
interface(`git_rwx_all_system_content',`
	gen_require(`
		attribute git_system_content;
	')

	exec_files_pattern($1, git_system_content, git_system_content)
	manage_dirs_pattern($1, git_system_content, git_system_content)
	manage_files_pattern($1, git_system_content, git_system_content)
	files_search_var_lib($1)

	tunable_policy(`git_system_use_cifs',`
		fs_exec_cifs_files($1)
		fs_manage_cifs_dirs($1)
		fs_manage_cifs_files($1)
	')

	tunable_policy(`git_system_use_nfs',`
		fs_exec_nfs_files($1)
		fs_manage_nfs_dirs($1)
		fs_manage_nfs_files($1)
	')
')

########################################
## <summary>
##	Allow the specified domain to manage
##	and execute Git daemon generic system content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`git_rwx_generic_system_content',`
	gen_require(`
		type git_sys_content_t;
	')

	exec_files_pattern($1, git_sys_content_t, git_sys_content_t)
	manage_dirs_pattern($1, git_sys_content_t, git_sys_content_t)
	manage_files_pattern($1, git_sys_content_t, git_sys_content_t)
	files_search_var_lib($1)

	tunable_policy(`git_system_use_cifs',`
		fs_exec_cifs_files($1)
		fs_manage_cifs_dirs($1)
		fs_manage_cifs_files($1)
	')

	tunable_policy(`git_system_use_nfs',`
		fs_exec_nfs_files($1)
		fs_manage_nfs_dirs($1)
		fs_manage_nfs_files($1)
	')
')

########################################
## <summary>
##	Allow the specified domain to read
##	all Git daemon content files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`git_read_all_content_files',`
	gen_require(`
		attribute git_content;
	')

	list_dirs_pattern($1, git_content, git_content)
	read_files_pattern($1, git_content, git_content)
	userdom_search_user_home_dirs($1)
	files_search_var_lib($1)

	tunable_policy(`git_system_use_cifs',`
		fs_list_cifs($1)
		fs_read_cifs_files($1)
	')

	tunable_policy(`git_system_use_nfs',`
		fs_list_nfs($1)
		fs_read_nfs_files($1)
	')
')

########################################
## <summary>
##	Allow the specified domain to read
##	Git daemon session content files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`git_read_session_content_files',`
	gen_require(`
		type git_user_content_t;
	')

	list_dirs_pattern($1, git_user_content_t, git_user_content_t)
	read_files_pattern($1, git_user_content_t, git_user_content_t)
	userdom_search_user_home_dirs($1)
')

#######################################
## <summary>
##	Dontaudit the specified domain to read
##	Git daemon session content files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`git_dontaudit_read_session_content_files',`
	gen_require(`
		type git_user_content_t;
	')

	dontaudit $1 git_user_content_t:file read_file_perms;
')

########################################
## <summary>
##	Allow the specified domain to read
##	all Git daemon system content files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`git_read_all_system_content_files',`
	gen_require(`
		attribute git_system_content;
	')

	list_dirs_pattern($1, git_system_content, git_system_content)
	read_files_pattern($1, git_system_content, git_system_content)
	files_search_var_lib($1)

	tunable_policy(`git_system_use_cifs',`
		fs_list_cifs($1)
		fs_read_cifs_files($1)
	')

	tunable_policy(`git_system_use_nfs',`
		fs_list_nfs($1)
		fs_read_nfs_files($1)
	')
')

########################################
## <summary>
##	Allow the specified domain to read
##	Git daemon generic system content files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`git_read_generic_system_content_files',`
=======
interface(`git_read_generic_sys_content_files',`
>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a
	gen_require(`
		type git_sys_content_t;
	')

	list_dirs_pattern($1, git_sys_content_t, git_sys_content_t)
	read_files_pattern($1, git_sys_content_t, git_sys_content_t)
<<<<<<< HEAD
	read_lnk_files_pattern($1, git_sys_content_t, git_sys_content_t)
	files_search_var_lib($1)

	tunable_policy(`git_system_use_cifs',`
=======

	files_search_var_lib($1)

	tunable_policy(`git_system_use_cifs',`
		fs_getattr_cifs($1)
>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a
		fs_list_cifs($1)
		fs_read_cifs_files($1)
	')

	tunable_policy(`git_system_use_nfs',`
<<<<<<< HEAD
=======
		fs_getattr_nfs($1)
>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a
		fs_list_nfs($1)
		fs_read_nfs_files($1)
	')
')
<<<<<<< HEAD

########################################
## <summary>
##	Allow the specified domain to relabel
##	all Git daemon content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`git_relabel_all_content',`
	gen_require(`
		attribute git_content;
	')

	relabel_dirs_pattern($1, git_content, git_content)
	relabel_files_pattern($1, git_content, git_content)
	userdom_search_user_home_dirs($1)
	files_search_var_lib($1)
')

########################################
## <summary>
##	Allow the specified domain to relabel
##	all Git daemon system content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`git_relabel_all_system_content',`
	gen_require(`
		attribute git_system_content;
	')

	relabel_dirs_pattern($1, git_system_content, git_system_content)
	relabel_files_pattern($1, git_system_content, git_system_content)
	files_search_var_lib($1)
')

########################################
## <summary>
##	Allow the specified domain to relabel
##	Git daemon generic system content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`git_relabel_generic_system_content',`
	gen_require(`
		type git_sys_content_t;
	')

	relabel_dirs_pattern($1, git_sys_content_t, git_sys_content_t)
	relabel_files_pattern($1, git_sys_content_t, git_sys_content_t)
	files_search_var_lib($1)
')

########################################
## <summary>
##	Allow the specified domain to relabel
##	Git daemon session content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`git_relabel_session_content',`
	gen_require(`
		type git_user_content_t;
	')

	relabel_dirs_pattern($1, git_user_content_t, git_user_content_t)
	relabel_files_pattern($1, git_user_content_t, git_user_content_t)
	userdom_search_user_home_dirs($1)
')

########################################
## <summary>
##	Create Git user content with a
##	named file transition.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`git_filetrans_user_content',`
	gen_require(`
		type git_user_content_t;
	')

	userdom_user_home_dir_filetrans($1, git_user_content_t, dir, "public_git")
')
=======
>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a
