policy_module(rabbitmq, 1.0.0)

########################################
#
# Declarations
#

type rabbitmq_epmd_t;
type rabbitmq_epmd_exec_t;
init_daemon_domain(rabbitmq_epmd_t, rabbitmq_epmd_exec_t)

type rabbitmq_beam_t;
type rabbitmq_beam_exec_t;
init_daemon_domain(rabbitmq_beam_t, rabbitmq_beam_exec_t)

<<<<<<< HEAD
=======
type rabbitmq_initrc_exec_t;
init_script_file(rabbitmq_initrc_exec_t)

>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a
type rabbitmq_var_lib_t;
files_type(rabbitmq_var_lib_t)

type rabbitmq_var_log_t;
logging_log_file(rabbitmq_var_log_t)

<<<<<<< HEAD
######################################
#
# beam local policy
#

allow rabbitmq_beam_t self:process { setsched signal signull };

allow rabbitmq_beam_t self:fifo_file rw_fifo_file_perms;
allow rabbitmq_beam_t self:tcp_socket create_stream_socket_perms;
=======
type rabbitmq_var_run_t;
files_pid_file(rabbitmq_var_run_t)

######################################
#
# Beam local policy
#

allow rabbitmq_beam_t self:process { setsched signal signull };
allow rabbitmq_beam_t self:fifo_file rw_fifo_file_perms;
allow rabbitmq_beam_t self:tcp_socket { accept listen };
>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a

manage_dirs_pattern(rabbitmq_beam_t, rabbitmq_var_lib_t, rabbitmq_var_lib_t)
manage_files_pattern(rabbitmq_beam_t, rabbitmq_var_lib_t, rabbitmq_var_lib_t)

manage_dirs_pattern(rabbitmq_beam_t, rabbitmq_var_log_t, rabbitmq_var_log_t)
<<<<<<< HEAD
manage_files_pattern(rabbitmq_beam_t, rabbitmq_var_log_t, rabbitmq_var_log_t)

can_exec(rabbitmq_beam_t, rabbitmq_beam_exec_t)

=======
append_files_pattern(rabbitmq_beam_t, rabbitmq_var_log_t, rabbitmq_var_log_t)
create_files_pattern(rabbitmq_beam_t, rabbitmq_var_log_t, rabbitmq_var_log_t)
setattr_files_pattern(rabbitmq_beam_t, rabbitmq_var_log_t, rabbitmq_var_log_t)

manage_dirs_pattern(rabbitmq_beam_t, rabbitmq_var_run_t, rabbitmq_var_run_t)
manage_files_pattern(rabbitmq_beam_t, rabbitmq_var_run_t, rabbitmq_var_run_t)

can_exec(rabbitmq_beam_t, rabbitmq_beam_exec_t)

domtrans_pattern(rabbitmq_beam_t, rabbitmq_epmd_exec_t, rabbitmq_epmd_t)

>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a
kernel_read_system_state(rabbitmq_beam_t)

corecmd_exec_bin(rabbitmq_beam_t)
corecmd_exec_shell(rabbitmq_beam_t)

<<<<<<< HEAD
corenet_tcp_bind_generic_node(rabbitmq_beam_t)
corenet_udp_bind_generic_node(rabbitmq_beam_t)
corenet_tcp_connect_all_ephemeral_ports(rabbitmq_beam_t)
corenet_tcp_bind_amqp_port(rabbitmq_beam_t)
corenet_tcp_connect_epmd_port(rabbitmq_beam_t)
=======
corenet_all_recvfrom_unlabeled(rabbitmq_beam_t)
corenet_all_recvfrom_netlabel(rabbitmq_beam_t)
corenet_tcp_sendrecv_generic_if(rabbitmq_beam_t)
corenet_tcp_sendrecv_generic_node(rabbitmq_beam_t)
corenet_tcp_bind_generic_node(rabbitmq_beam_t)

corenet_sendrecv_amqp_server_packets(rabbitmq_beam_t)
corenet_tcp_bind_amqp_port(rabbitmq_beam_t)
corenet_tcp_sendrecv_amqp_port(rabbitmq_beam_t)

corenet_sendrecv_epmd_client_packets(rabbitmq_beam_t)
corenet_tcp_connect_epmd_port(rabbitmq_beam_t)
corenet_tcp_sendrecv_epmd_port(rabbitmq_beam_t)
>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a

dev_read_sysfs(rabbitmq_beam_t)

files_read_etc_files(rabbitmq_beam_t)

<<<<<<< HEAD

optional_policy(`
    sysnet_dns_name_resolve(rabbitmq_beam_t)
')

########################################
#
# epmd local policy
#

domtrans_pattern(rabbitmq_beam_t, rabbitmq_epmd_exec_t, rabbitmq_epmd_t)

allow rabbitmq_epmd_t self:process signal;

allow rabbitmq_epmd_t self:fifo_file rw_fifo_file_perms;
allow rabbitmq_epmd_t self:tcp_socket create_stream_socket_perms;
allow rabbitmq_epmd_t self:unix_stream_socket create_stream_socket_perms;

# should be append
allow rabbitmq_epmd_t rabbitmq_var_log_t:file write_file_perms;

corenet_tcp_bind_generic_node(rabbitmq_epmd_t)
corenet_udp_bind_generic_node(rabbitmq_epmd_t)
corenet_tcp_bind_epmd_port(rabbitmq_epmd_t)
=======
miscfiles_read_localization(rabbitmq_beam_t)

sysnet_dns_name_resolve(rabbitmq_beam_t)

########################################
#
# Epmd local policy
#


allow rabbitmq_epmd_t self:process signal;
allow rabbitmq_epmd_t self:fifo_file rw_fifo_file_perms;
allow rabbitmq_epmd_t self:tcp_socket create_stream_socket_perms;
allow rabbitmq_epmd_t self:unix_stream_socket { accept listen };

allow rabbitmq_epmd_t rabbitmq_var_log_t:file append_file_perms;

corenet_all_recvfrom_unlabeled(rabbitmq_epmd_t)
corenet_all_recvfrom_netlabel(rabbitmq_epmd_t)
corenet_tcp_sendrecv_generic_if(rabbitmq_epmd_t)
corenet_tcp_sendrecv_generic_node(rabbitmq_epmd_t)
corenet_tcp_bind_generic_node(rabbitmq_epmd_t)

corenet_sendrecv_epmd_server_packets(rabbitmq_epmd_t)
corenet_tcp_bind_epmd_port(rabbitmq_epmd_t)
corenet_tcp_sendrecv_epmd_port(rabbitmq_epmd_t)
>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a

files_read_etc_files(rabbitmq_epmd_t)

logging_send_syslog_msg(rabbitmq_epmd_t)
<<<<<<< HEAD
=======

miscfiles_read_localization(rabbitmq_epmd_t)
>>>>>>> 662a00bca8f52af8056f41abd0fdec77ea835b2a
