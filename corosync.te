policy_module(corosync, 1.0.0)

########################################
#
# Declarations
#

type corosync_t;
type corosync_exec_t;
init_daemon_domain(corosync_t, corosync_exec_t)
domain_obj_id_change_exemption(corosync_t)

type corosync_initrc_exec_t;
init_script_file(corosync_initrc_exec_t)

type corosync_tmp_t;
files_tmp_file(corosync_tmp_t)

type corosync_tmpfs_t;
files_tmpfs_file(corosync_tmpfs_t)

type corosync_var_lib_t;
files_type(corosync_var_lib_t)

type corosync_var_log_t;
logging_log_file(corosync_var_log_t)

type corosync_var_run_t;
files_pid_file(corosync_var_run_t)

type corosync_unit_file_t;
systemd_unit_file(corosync_unit_file_t)

########################################
#
# corosync local policy
#

allow corosync_t self:capability { dac_override chown kill setuid setgid sys_nice sys_admin sys_resource ipc_lock };
# for hearbeat
allow corosync_t self:capability { net_raw chown };
allow corosync_t self:process { setpgid setrlimit setsched signal signull };

allow corosync_t self:fifo_file rw_fifo_file_perms;
allow corosync_t self:sem create_sem_perms;
allow corosync_t self:shm create_shm_perms;
allow corosync_t self:unix_stream_socket { create_stream_socket_perms connectto };
allow corosync_t self:unix_dgram_socket { create_socket_perms sendto };
allow corosync_t self:udp_socket create_socket_perms;

can_exec(corosync_t, corosync_exec_t)

manage_dirs_pattern(corosync_t, corosync_tmp_t, corosync_tmp_t)
manage_files_pattern(corosync_t, corosync_tmp_t, corosync_tmp_t)
files_tmp_filetrans(corosync_t, corosync_tmp_t, { file dir })
allow corosync_t corosync_tmp_t:file { relabelfrom relabelto };

manage_dirs_pattern(corosync_t, corosync_tmpfs_t, corosync_tmpfs_t)
manage_files_pattern(corosync_t, corosync_tmpfs_t, corosync_tmpfs_t)
fs_tmpfs_filetrans(corosync_t, corosync_tmpfs_t, { dir file })

manage_files_pattern(corosync_t, corosync_var_lib_t, corosync_var_lib_t)
manage_dirs_pattern(corosync_t, corosync_var_lib_t, corosync_var_lib_t)
manage_sock_files_pattern(corosync_t, corosync_var_lib_t, corosync_var_lib_t)
manage_fifo_files_pattern(corosync_t, corosync_var_lib_t,corosync_var_lib_t)
files_var_lib_filetrans(corosync_t,corosync_var_lib_t, { file dir fifo_file sock_file })

manage_files_pattern(corosync_t, corosync_var_log_t, corosync_var_log_t)
manage_sock_files_pattern(corosync_t, corosync_var_log_t, corosync_var_log_t)
logging_log_filetrans(corosync_t, corosync_var_log_t, { sock_file file })

manage_files_pattern(corosync_t, corosync_var_run_t, corosync_var_run_t)
manage_sock_files_pattern(corosync_t, corosync_var_run_t, corosync_var_run_t)
manage_dirs_pattern(corosync_t, corosync_var_run_t,corosync_var_run_t)
files_pid_filetrans(corosync_t, corosync_var_run_t, { file sock_file dir })

kernel_read_system_state(corosync_t)
kernel_read_network_state(corosync_t)
kernel_read_net_sysctls(corosync_t)
kernel_read_kernel_sysctls(corosync_t)

corecmd_exec_bin(corosync_t)
corecmd_exec_shell(corosync_t)

corenet_udp_bind_netsupport_port(corosync_t)
corenet_tcp_connect_saphostctrl_port(corosync_t)

dev_read_urand(corosync_t)

domain_read_all_domains_state(corosync_t)

sysnet_domtrans_ifconfig(corosync_t)

netutils_domtrans_ping(corosync_t)

sysnet_domtrans_ifconfig(corosync_t)

# for ocf:pacemaker:ping
netutils_domtrans_ping(corosync_t)

files_manage_mounttab(corosync_t)
files_read_usr_files(corosync_t)

auth_use_nsswitch(corosync_t)

init_domtrans_script(corosync_t)
init_read_script_state(corosync_t)
init_rw_script_tmp_files(corosync_t)
init_all_labeled_script_domtrans(corosync_t)

logging_send_syslog_msg(corosync_t)

userdom_read_user_tmp_files(corosync_t)
userdom_delete_user_tmpfs_files(corosync_t)
userdom_rw_user_tmpfs_files(corosync_t)

optional_policy(`
	fs_manage_tmpfs_files(corosync_t)
	init_manage_script_status_files(corosync_t)
')

optional_policy(`
	ccs_read_config(corosync_t)
')

optional_policy(`
	cmirrord_rw_shm(corosync_t)
')

optional_policy(`
	consoletype_exec(corosync_t)
')

optional_policy(`
	dbus_system_bus_client(corosync_t)
')

optional_policy(`
	drbd_domtrans(corosync_t)
')

optional_policy(`
	lvm_rw_clvmd_tmpfs_files(corosync_t)
	lvm_delete_clvmd_tmpfs_files(corosync_t)
')

optional_policy(`
	qpidd_rw_shm(corosync_t)
')

optional_policy(`
	rhcs_getattr_fenced(corosync_t)
	# to communication with RHCS
	rhcs_rw_cluster_shm(corosync_t)
	rhcs_rw_cluster_semaphores(corosync_t)
	rhcs_stream_connect_cluster(corosync_t)
	rhcs_read_cluster_lib_files(corosync_t)
	rhcs_manage_cluster_lib_files(corosync_t)
	rhcs_relabel_cluster_lib_files(corosync_t)
')

optional_policy(`
	# should be removed in F19
	# workaround because we switch hearbeat from corosync to rgmanager
	rgmanager_manage_files(corosync_t)

	rgmanager_manage_tmpfs_files(corosync_t)
')

optional_policy(`
	rpc_search_nfs_state_data(corosync_t)
')

